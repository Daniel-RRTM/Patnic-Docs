{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"Index/","text":"Your Docs for everything about the Game! Usage This page contains a technical explanation for the inner workings of the Game. If you are looking for the Encyclopedia of Game-elements, click here! Overview P@tnicRoom uses the Godot 3 Engine and is written in their own Scriptlanguage . Framework The fundamental processes of the Game are managed by the following Classes: Name Usage Democr ECS getting and setting values of Game ELements Sokra TILES parses and organices the Tilemap Aris PROCGEN es WIP Dav IN ci executes input by its context A LEC andria instanciates Game Elements from LEC-files","title":"Your Docs for everything about the Game!"},{"location":"Index/#your-docs-for-everything-about-the-game","text":"","title":"Your Docs for everything about the Game!"},{"location":"Index/#usage","text":"This page contains a technical explanation for the inner workings of the Game. If you are looking for the Encyclopedia of Game-elements, click here!","title":"Usage"},{"location":"Index/#overview","text":"P@tnicRoom uses the Godot 3 Engine and is written in their own Scriptlanguage .","title":"Overview"},{"location":"Index/#framework","text":"The fundamental processes of the Game are managed by the following Classes: Name Usage Democr ECS getting and setting values of Game ELements Sokra TILES parses and organices the Tilemap Aris PROCGEN es WIP Dav IN ci executes input by its context A LEC andria instanciates Game Elements from LEC-files","title":"Framework"},{"location":"Tags/","text":"Tags Following is a list of relevant tags: [TAGS] - test","title":"Tags"},{"location":"Tags/#tags","text":"Following is a list of relevant tags: [TAGS] - test","title":"Tags"},{"location":"CogsmosFramework/CogsmosOverview/","text":"Introduction Cogsmos is our Framework which keeps the Core-Gameloop together! Their are separated from Modules for a Number of Reasons: 1. They are dependand on each other, Separation is by their nature very difficult. 2. They one of the first things that need to be initialiced at booting the Game. 3. They usable for all Modules, and not just one specific Game-System Parts Singleton Use DemocrECS ECS for Data orientated Programming SokraTiles Parsing of Tilemap and its Content ALECandria Parsing and instanciating external GameData AresProcGenes Procedurally generating Chunks, Actors and Loot DavInCi Manages and interpretes Userinput Fufact : Its Naming is a play on Wods: of \"Cog\" (on each other relaying pieces of a machine,greater than its sum) and \"Cosmos\" (used in Ancient Greece to describe universal Laws/ abstract Theories). hence why the Parts are named after Philosophers, each one has something with its Singleton in common","title":"CogsmosOverview"},{"location":"CogsmosFramework/CogsmosOverview/#introduction","text":"Cogsmos is our Framework which keeps the Core-Gameloop together! Their are separated from Modules for a Number of Reasons: 1. They are dependand on each other, Separation is by their nature very difficult. 2. They one of the first things that need to be initialiced at booting the Game. 3. They usable for all Modules, and not just one specific Game-System","title":"Introduction"},{"location":"CogsmosFramework/CogsmosOverview/#parts","text":"Singleton Use DemocrECS ECS for Data orientated Programming SokraTiles Parsing of Tilemap and its Content ALECandria Parsing and instanciating external GameData AresProcGenes Procedurally generating Chunks, Actors and Loot DavInCi Manages and interpretes Userinput Fufact : Its Naming is a play on Wods: of \"Cog\" (on each other relaying pieces of a machine,greater than its sum) and \"Cosmos\" (used in Ancient Greece to describe universal Laws/ abstract Theories). hence why the Parts are named after Philosophers, each one has something with its Singleton in common","title":"Parts"},{"location":"CogsmosFramework/ALECandria/Overview/","text":"WORK IN PROGRESS","title":"Overview"},{"location":"CogsmosFramework/ALECandria/Overview/#work-in-progress","text":"","title":"WORK IN PROGRESS"},{"location":"CogsmosFramework/ArisProcGenes/Overview/","text":"WORK IN PROGRESS","title":"Overview"},{"location":"CogsmosFramework/ArisProcGenes/Overview/#work-in-progress","text":"","title":"WORK IN PROGRESS"},{"location":"CogsmosFramework/DemocrECS/Overview/","text":"DemocrECS Introduction This part of the Framework is responsible to save and declare attributes of game elements. We are following the basic principles of Data oriented Programming, which does not try to mirror real Situations by Inheritance and Polymorphism, but favors a faster to access and more flexible style of implementations. Structure We use a common variant called ECS, in addition of a Flyweight pattern called Template Here is a short summary of the Structure: E ntity : An Object with Hashmaps of Components, overall composing a game element C omponent : A container for a value, standardiced by its name T emplat : A set of components which are commonly shared S ystem : A plugable module of functions which modify, create or delete Entities Personal changes Proxyfunctions as alternative to variables Even simple manipulations on a Component of an entity can take up quite some space: entity.getComp(\"C_1_IS_WALKABLE\").value = false Hence why we implemented different Children for Entities , they add for each common anominated Component a function by its name. Every TileEntity for example, needs the information if you can walk on them. if entity.isWalkable(): getDirection()","title":"Overview"},{"location":"CogsmosFramework/DemocrECS/Overview/#democrecs","text":"","title":"DemocrECS"},{"location":"CogsmosFramework/DemocrECS/Overview/#introduction","text":"This part of the Framework is responsible to save and declare attributes of game elements. We are following the basic principles of Data oriented Programming, which does not try to mirror real Situations by Inheritance and Polymorphism, but favors a faster to access and more flexible style of implementations.","title":"Introduction"},{"location":"CogsmosFramework/DemocrECS/Overview/#structure","text":"We use a common variant called ECS, in addition of a Flyweight pattern called Template Here is a short summary of the Structure: E ntity : An Object with Hashmaps of Components, overall composing a game element C omponent : A container for a value, standardiced by its name T emplat : A set of components which are commonly shared S ystem : A plugable module of functions which modify, create or delete Entities","title":"Structure"},{"location":"CogsmosFramework/DemocrECS/Overview/#personal-changes","text":"","title":"Personal changes"},{"location":"CogsmosFramework/DemocrECS/Overview/#proxyfunctions-as-alternative-to-variables","text":"Even simple manipulations on a Component of an entity can take up quite some space: entity.getComp(\"C_1_IS_WALKABLE\").value = false Hence why we implemented different Children for Entities , they add for each common anominated Component a function by its name. Every TileEntity for example, needs the information if you can walk on them. if entity.isWalkable(): getDirection()","title":"Proxyfunctions as alternative to variables"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/","text":"Entities Introduction Entities are a pillar in our gamedesign, almost every Item, Actor or obstacle can be tracked back to this class. broken down,they are just a collection of diffrent lists which contains the defining values of the game-element and references to other Entities which are in some relation to them. Entity Attributes Components Lorem Ipsum Templates Lorem Ipsum Flags Lorem Ipsum Properties Lorem Ipsum Conditions Lorem Ipsum Children with improved functioncalls Class Context Tile Floor of the current Chunk Interactable More complex inanimated Objects,standing on Tiles Actor NPC with their own will, gear and actions KitPart One of the 3 Parts of an KitSet Condition Manipulates an affected Entity over time KitSet Usable Abillity merged by KitParts Functions getComp(compIndex) getCompValue(compIndex) addComponent(Component) removeComponent(compIndex) hasComponent(compIndex) getCompTemp(tempIndex,compIndex) getCompTempValue(tempIndex,compIndex) addTemplate(tempIndex,Template) addFlag(enumNumber) removeFlag(enumNumber) hasFlag(enumNr) addProperty(enumNumber) removeProperty(enumNumber) hasProperty(enumNumber) hasCond(condIndex) Common Functions getComp(compIndex) 1st Parameter : String of class of Component Returns : Class of the same Name Can be used to get the Documentation of a Component or to change its instanced Value. Components and Entities dont have a setter-function, because we want in DOP/ECS the manipulation of Data only happening in Systems. Example: var ent = API_001_Atlas.Tile.getEntry(\"Terrain_0_0\") for compToString in ent.components.keys(): print(ent.getComp(compToString).getAutoDoc().nameToShow) getCompValue(compIndex) 1st Parameter : String of class of Component Returns : Component.value as dynamically typed The probably most used Function! returns the instanced Value of a Component of an Entity. Can only be used to read and not write due to reference by value (one above). Note: Its dynamic typing may cause some trouble, for exmaple by trying to print out a int typed value of an Component. We are aware of it and fix it soon. Example: for currentTile in API_001_Atlas.Tile.getEntries(): # is allready a String, no crashing var toPrint = currentTile.getCompValue(\"C_6_NAME\")+\" \" # to prevent crashing because of boolean return if currentTile.getCompValue(\"C_1_IS_WALKABLE\") : toPrint += \"is walkable\" else : toPrint += \"is not walkable\" print(toPrint) getCompTemp(tempIndex,compIndex) WIP getCompTempValue(tempIndex,compIndex) WIP addComponent(compInstance) 1st Parameter : Instance of a Component Returns : void adds the instance into the components Dictionary of the Entity with its name as a Key. Its name is always instanciated as its classname, hence each entity can have no Component twice. Instanciating Components always need a vlaue in its Constructor, in the most Cases both are happening in the same Line. Example: var allEnts : Array for name in [\"Hello\",\"World\"]: var ent = Entity.new() ent.addComponent(C_6_NAME.new(name)) allEnts.append(ent) for ent in allEnts : print(ent.getCompValue(\"C_6_NAME\")) removeComponent(compName) 1st Parameter : Stringof class of Component Returns : void erases the entry form components Dictionary. This does not free the instance, just erases the reference! Example: for currentTile in API_001_Atlas.Tile.getEntries(): currentTile.removeComponent(\"C_12_ATLAS_INDEX\") print(\"no more TileMaps!!!\") addTemplate(tempIndex,compIndex) WIP addFlag(flagName) 1st Parameter : name of Flag in String Returns : void adds a marker to the entity, use hasFLag() to validate. Note: its still the ToString of the enum, we are aware of that and will fix it Example: Lorem Ipsum Dolor Emit removeFlag(tempIndex) 1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit addProperty(tempIndex) 1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit removeProperty(tempIndex) 1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit hasProperty(tempIndex) 1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit hasFlag(tempIndex) 1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit hasComponent(tempIndex) 1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit hasCond(tempIndex) 1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit","title":"Parent"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#entities","text":"","title":"Entities"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#introduction","text":"Entities are a pillar in our gamedesign, almost every Item, Actor or obstacle can be tracked back to this class. broken down,they are just a collection of diffrent lists which contains the defining values of the game-element and references to other Entities which are in some relation to them.","title":"Introduction"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#entity-attributes","text":"","title":"Entity Attributes"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#components","text":"Lorem Ipsum","title":"Components"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#templates","text":"Lorem Ipsum","title":"Templates"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#flags","text":"Lorem Ipsum","title":"Flags"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#properties","text":"Lorem Ipsum","title":"Properties"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#conditions","text":"Lorem Ipsum","title":"Conditions"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#children-with-improved-functioncalls","text":"Class Context Tile Floor of the current Chunk Interactable More complex inanimated Objects,standing on Tiles Actor NPC with their own will, gear and actions KitPart One of the 3 Parts of an KitSet Condition Manipulates an affected Entity over time KitSet Usable Abillity merged by KitParts","title":"Children with improved functioncalls"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#functions","text":"getComp(compIndex) getCompValue(compIndex) addComponent(Component) removeComponent(compIndex) hasComponent(compIndex) getCompTemp(tempIndex,compIndex) getCompTempValue(tempIndex,compIndex) addTemplate(tempIndex,Template) addFlag(enumNumber) removeFlag(enumNumber) hasFlag(enumNr) addProperty(enumNumber) removeProperty(enumNumber) hasProperty(enumNumber) hasCond(condIndex)","title":"Functions"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#common-functions","text":"","title":"Common Functions"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#getcompcompindex","text":"1st Parameter : String of class of Component Returns : Class of the same Name Can be used to get the Documentation of a Component or to change its instanced Value. Components and Entities dont have a setter-function, because we want in DOP/ECS the manipulation of Data only happening in Systems. Example: var ent = API_001_Atlas.Tile.getEntry(\"Terrain_0_0\") for compToString in ent.components.keys(): print(ent.getComp(compToString).getAutoDoc().nameToShow)","title":"getComp(compIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#getcompvaluecompindex","text":"1st Parameter : String of class of Component Returns : Component.value as dynamically typed The probably most used Function! returns the instanced Value of a Component of an Entity. Can only be used to read and not write due to reference by value (one above). Note: Its dynamic typing may cause some trouble, for exmaple by trying to print out a int typed value of an Component. We are aware of it and fix it soon. Example: for currentTile in API_001_Atlas.Tile.getEntries(): # is allready a String, no crashing var toPrint = currentTile.getCompValue(\"C_6_NAME\")+\" \" # to prevent crashing because of boolean return if currentTile.getCompValue(\"C_1_IS_WALKABLE\") : toPrint += \"is walkable\" else : toPrint += \"is not walkable\" print(toPrint)","title":"getCompValue(compIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#getcomptemptempindexcompindex","text":"WIP","title":"getCompTemp(tempIndex,compIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#getcomptempvaluetempindexcompindex","text":"WIP","title":"getCompTempValue(tempIndex,compIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#addcomponentcompinstance","text":"1st Parameter : Instance of a Component Returns : void adds the instance into the components Dictionary of the Entity with its name as a Key. Its name is always instanciated as its classname, hence each entity can have no Component twice. Instanciating Components always need a vlaue in its Constructor, in the most Cases both are happening in the same Line. Example: var allEnts : Array for name in [\"Hello\",\"World\"]: var ent = Entity.new() ent.addComponent(C_6_NAME.new(name)) allEnts.append(ent) for ent in allEnts : print(ent.getCompValue(\"C_6_NAME\"))","title":"addComponent(compInstance)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#removecomponentcompname","text":"1st Parameter : Stringof class of Component Returns : void erases the entry form components Dictionary. This does not free the instance, just erases the reference! Example: for currentTile in API_001_Atlas.Tile.getEntries(): currentTile.removeComponent(\"C_12_ATLAS_INDEX\") print(\"no more TileMaps!!!\")","title":"removeComponent(compName)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#addtemplatetempindexcompindex","text":"WIP","title":"addTemplate(tempIndex,compIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#addflagflagname","text":"1st Parameter : name of Flag in String Returns : void adds a marker to the entity, use hasFLag() to validate. Note: its still the ToString of the enum, we are aware of that and will fix it Example: Lorem Ipsum Dolor Emit","title":"addFlag(flagName)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#removeflagtempindex","text":"1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit","title":"removeFlag(tempIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#addpropertytempindex","text":"1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit","title":"addProperty(tempIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#removepropertytempindex","text":"1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit","title":"removeProperty(tempIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#haspropertytempindex","text":"1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit","title":"hasProperty(tempIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#hasflagtempindex","text":"1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit","title":"hasFlag(tempIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#hascomponenttempindex","text":"1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit","title":"hasComponent(tempIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Entity/#hascondtempindex","text":"1st Parameter : 2nd Parameter : Returns : Lorem Ipsum Dolor Emit Example: Lorem Ipsum Dolor Emit","title":"hasCond(tempIndex)"},{"location":"CogsmosFramework/DemocrECS/Entity/Template/","text":"WORK IN PROGRESS","title":"WORK IN PROGRESS"},{"location":"CogsmosFramework/DemocrECS/Entity/Template/#work-in-progress","text":"","title":"WORK IN PROGRESS"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Actor/","text":"Actors Introduction Those Entities are the important kickstarter for Excitement. Actors are aware beings like humans, but also Animals, Critters, Ghosts or Plants. The big difference to Interactables is,Actors follow a goals, initiate events like shooting, while Interactables stay reactionary. Generation Actors are set togeteher by those three parts which can be procedurallly selected for \"random\" generation Component-name Usage Races Determinds max of Attributes and their Basevalue, also comes with feats Roles Gives a large amount of Skillpoints and some for Attributes Specialties Gives Gear, some little feats and some Skillpoints Unique Functions mouseHover_quack() Returns : String A duck-typed function for all Entities that are present on the Tilemap, it returns a Component-value (here: Synonym ). I.E. used in onLook Component Getter General function Return Usage Notation index String fluff and lore shown in onlook-action recommended length is 40 characters at max name String oneliner reference recommended length is 2 words at max staticTilesetNR Integer index number of corresponding Texture not recommended for freqeunt use. please use textureID for improved readabillity. Synonym String RNG-selected lore name of Race Role Spcialty description String fluff and lore shown in onlook-action recommended length is 40 characters at max Spacial function Type Usage Notation type ENUM identifier to differenciate from other entities ENUM.TYPES_._ON_MAP isWalkable BOOLEAN Determinds if Actors can stand on Tile mouseHover_quack String duck-typed proxy-function to show on Mousehover pos Vector2 position of Entity on x and y on Tilemap posX and posY can be for single getter. Are Converted from Double to Integer! Attributes function Type Usage Notation constitution Integer Health, CarriageCapacity physical reaction Integer physical strength Integer physical agillity Integer physical willpower Integer mental logic Integer mental charisma Integer mental intuition Integer mental indirect stats function Type Usage Notation carriageCapacity Integer kg of gear actor can carry hitpoints Integer Live of Actor physicalLimit Integer max successes in Dicerole for physical mentalLimit Integer max successes in Dicerole for mental socialLimit Integer max successes in Dicerole for social","title":"Actor"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Actor/#actors","text":"","title":"Actors"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Actor/#introduction","text":"Those Entities are the important kickstarter for Excitement. Actors are aware beings like humans, but also Animals, Critters, Ghosts or Plants. The big difference to Interactables is,Actors follow a goals, initiate events like shooting, while Interactables stay reactionary.","title":"Introduction"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Actor/#generation","text":"Actors are set togeteher by those three parts which can be procedurallly selected for \"random\" generation","title":"Generation"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Actor/#unique-functions","text":"","title":"Unique Functions"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Actor/#mousehover_quack","text":"Returns : String A duck-typed function for all Entities that are present on the Tilemap, it returns a Component-value (here: Synonym ). I.E. used in onLook","title":"mouseHover_quack()"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Actor/#component-getter","text":"","title":"Component Getter"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Actor/#general","text":"","title":"General"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Actor/#spacial","text":"","title":"Spacial"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Actor/#attributes","text":"","title":"Attributes"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Actor/#indirect-stats","text":"","title":"indirect stats"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Interactable/","text":"Interactables Introduction Those Entities are in between Tiles and Actors. Much like Tiles, they are static and can not change their position on the Tilemap. But they are able to be part of a greater narrative, just like Actors. Actors can usually not walk on Interactables and are reactionary. Common Components General function Type Usage Notation description String fluff and lore shown in onlook-action recommended length is 40 characters at max textureID String toString() of staticTilesetNR is a convention of 3 fields with \"_\" as IFS: Tileset_Row_Collumn layer Integer name of layer where its mapped convention of ENUM.SOKRATILES_LAYER. X _GROUND X for MEAT MATRIX MAGIC tileName String oneliner reference recommended length is 2 words at max staticTilesetNR Integer index number of corresponding Texture not recommended for freqeunt use. please use textureID for improved readabillity. Spacial function Type Usage Notation type ENUM identifier to differenciate from other entities convention of ENUM.TYPES_ON_MAP.TILE isWalkable BOOLEAN Determinds if Actors can stand on Tile mouseHover_quack String duck-typed proxy-function to show on Mousehover pos Vector2 position of Entity on x and y on Tilemap posX and posY can be for single getter. Are Converted from Double to Integer! Influencial function Type Usage Notation matrixNoise Integer negative modifier for sourrunding Electronics WIP magicNoise Integer negative modifier for sourrunding Magics WIP","title":"Interactables"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Interactable/#interactables","text":"","title":"Interactables"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Interactable/#introduction","text":"Those Entities are in between Tiles and Actors. Much like Tiles, they are static and can not change their position on the Tilemap. But they are able to be part of a greater narrative, just like Actors. Actors can usually not walk on Interactables and are reactionary.","title":"Introduction"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Interactable/#common-components","text":"","title":"Common Components"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Interactable/#general","text":"","title":"General"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Interactable/#spacial","text":"","title":"Spacial"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Interactable/#influencial","text":"","title":"Influencial"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Player/","text":"Systems For readabillity are the many getter nested in proxy-functions, following Functions return their corresponding System: * kitsets * kitparts * skills * attributes * indirects Kitsets-Functions Name Return Type Notation getAll() Array returns an array of all KitSetEntities the player is currently able to use getByNr(Integer) KitSetEntity returns KitSetEntity corresponding to its Key-input getByName(String) KitSetEntity returns KitSetEntity corresponding to its C_12_INDEX_NAME remove(KitSetEntity) void removes KitSetEntity of the players Inventory ( DOES NOT DISASSEMBLE TO KITPARTS ) append(KitSetEntity) void removes KitSetEntity of the players Inventory ( DOES NOT REMOVEKITPARTS OF TEAM_SHARED LIST ) # ### Kitparts-Functions Name Return Type Notation --------------------------------------------- -------------------------- ----------------------------------------------------------------------- getAll() Array returns an array of all KitPartEntities the player is currently able to use getByNr(Integer) KitPartEntity returns KitPartEntity corresponding to its Key-input getByName(String) KitPartEntity returns KitPartEntity corresponding to its C_12_INDEX_NAME remove(KitPartEntity) void removes KitPartEntity of the players Inventory ( DOES NOT DISASSEMBLE TO KITPARTS ) append(KitPartEntity) void removes KitPartEntity of the players Inventory ( DOES NOT REMOVEKITPARTS OF TEAM_SHARED LIST ) # ### Skills-Functions Name Return Type Notation --------------------------------------------- -------------------------- ----------------------------------------------------------------------- crafting() Integer returns the current competence in this Skill phylosophicing() Integer returns the current competence in this Skill conceptualication() Integer returns the current competence in this Skill percieving() Integer returns the current competence in this Skill assensing() Integer returns the current competence in this Skill debugging() Integer returns the current competence in this Skill enduring() Integer returns the current competence in this Skill coping() Integer returns the current competence in this Skill filtering() Integer returns the current competence in this Skill sneaking() Integer returns the current competence in this Skill repressing() Integer returns the current competence in this Skill silencing() Integer returns the current competence in this Skill # ### Attributes-Functions Name Return Type Notation --------------------------------------------- -------------------------- ----------------------------------------------------------------------- logic() Integer returns the current competence in this attribute agillity() Integer returns the current competence in this attribute reaction() Integer returns the current competence in this attribute constitution() Integer returns the current competence in this attribute strength() Integer returns the current competence in this attribute intuition() Integer returns the current competence in this attribute charisma() Integer returns the current competence in this attribute willpower() Integer returns the current competence in this attribute # ### Indirects-Functions Name Return Type Notation --------------------------------------------- -------------------------- ----------------------------------------------------------------------- maxKitSlots() Integer returns the current competence in this calculated value hitpoints() Integer returns the current competence in this calculated value carriageCapacity() Integer returns the current competence in this calculated value mentalLimit() Integer returns the current competence in this calculated value physicalLimit() Integer returns the current competence in this calculated value socialLimit() Integer returns the current competence in this calculated value","title":"Player"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Player/#systems","text":"For readabillity are the many getter nested in proxy-functions, following Functions return their corresponding System: * kitsets * kitparts * skills * attributes * indirects","title":"Systems"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Player/#_1","text":"","title":""},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Player/#kitsets-functions","text":"","title":"Kitsets-Functions"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Tile/","text":"Tiles Introduction Those Entities are detrimental for the Gameworld. They are simple enviromental Objects like a patch of grass or concrete, and hold information about the capabillities to interact with them. For example, whether the patch is burnable or not. Common Components Generall function Return type Component Class-name Usage description String C_0_DESCRIPTION Lore for Worldbuilding isWalkable bool C_1_IS_WALKABLE Determinds if an ActorEntity can stand on it textureID String C_12_ATLAS_INDEX Readable variant of the staticTilesetNr, set together by an IFS of Tileset_Row_Collumn tileName String C_6_NAME Oneliner reference of max 2 Words layer String C_3_LAYER Convention of ENUM.SOKRATILES.LAYER determining on which layer its percieved toStrings function Return type Component Class-name Usage type String ??? ??? mouseHover_quack String C_6_NAME ducktyped function to show name by hovering the mouse over it Spacial function Return type Component Class-name Usage pos Vector2D Instance-variable for perfomance reason returns a dictionary-like structure with x and y keys and their float values poxX int Instance-variable for perfomance reason place on the X-Axis on the Tilemap posY int Instance-variable for perfomance reason place on the Y-Axis on the Tilemap Tilemap Parse function Return type Component Class-name Usage staticTilesetNr int C_7_STATIC_TILESET_NR Number of the Texture in the Tileset Atlas matrixNoise int C_5_MATRIX_NOISE WIP magicNoise int C_4_MAGIC_NOISE WIP","title":"Tile"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Tile/#tiles","text":"","title":"Tiles"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Tile/#introduction","text":"Those Entities are detrimental for the Gameworld. They are simple enviromental Objects like a patch of grass or concrete, and hold information about the capabillities to interact with them. For example, whether the patch is burnable or not.","title":"Introduction"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Tile/#common-components","text":"","title":"Common Components"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Tile/#generall","text":"","title":"Generall"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Tile/#tostrings","text":"","title":"toStrings"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Tile/#spacial","text":"","title":"Spacial"},{"location":"CogsmosFramework/DemocrECS/Entity/Chunk/Tile/#tilemap-parse","text":"","title":"Tilemap Parse"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Condition/","text":"Conditions Introduction Conditions provide a longterm influence for affected entities, the include a functions which is called every start of a round. Attributes affectedEnt : Entity is a reference to the Entity which is manipulated, it can be attached by API_006_Condition.attachConditionToEnt(ent,condIndex,duration,level) for more click here . Its type-castet as Entity effect : Array contains the contextual strings for each effect that manipulates the Entity level : Integer Intensity of the effects, may be not neccessary duration : Integer Nuber of rounds to run the effects Common Componenets function Return Usage Notation index String fluff and lore shown in onlook-action recommended length is 40 characters at max use String oneliner reference recommended length is 2 words at max texture Integer index number of corresponding Texture not recommended for freqeunt use. please use textureID for improved readabillity. name String RNG-selected lore name of Race Role Spcialty by String RNG-selected lore name of Race Role Spcialty description String RNG-selected lore name of Race Role Spcialty","title":"Overview"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Condition/#conditions","text":"","title":"Conditions"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Condition/#introduction","text":"Conditions provide a longterm influence for affected entities, the include a functions which is called every start of a round.","title":"Introduction"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Condition/#attributes","text":"","title":"Attributes"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Condition/#affectedent-entity","text":"is a reference to the Entity which is manipulated, it can be attached by API_006_Condition.attachConditionToEnt(ent,condIndex,duration,level) for more click here . Its type-castet as Entity","title":"affectedEnt : Entity"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Condition/#effect-array","text":"contains the contextual strings for each effect that manipulates the Entity","title":"effect : Array"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Condition/#level-integer","text":"Intensity of the effects, may be not neccessary","title":"level : Integer"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Condition/#duration-integer","text":"Nuber of rounds to run the effects","title":"duration : Integer"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Condition/#common-componenets","text":"","title":"Common Componenets"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Effect/","text":"Effects Introduction Effects are Systems which Conditions uses to manipulate their affected Entities. List","title":"Condition"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Effect/#effects","text":"","title":"Effects"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Effect/#introduction","text":"Effects are Systems which Conditions uses to manipulate their affected Entities.","title":"Introduction"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Effect/#list","text":"","title":"List"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Systems/affect/","text":"","title":"Affect"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Systems/constraint/","text":"","title":"Constraint"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Systems/move/","text":"","title":"Move"},{"location":"CogsmosFramework/DemocrECS/Entity/Event/Systems/spread/","text":"","title":"Spread"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/","text":"KitPart Introduction KitParts are the single buildingblocks for KitSets . Types Core The most Important. It defines its Description and its use! Therefore its Mandatory for every Kit! It also determinds possible Upgrades ! Upgrade The Improvement. It specialices the Kit in a certain of aspect! This part is optional ! It may debuff other aspects in some rare cases! Trait A passive Benefit. It gives a small generall advantage under conditions! This part is optional ! needs to be on same plane , is independant of the Core! Common Components General function Return Usage Notation index String fluff and lore shown in onlook-action recommended length is 40 characters at max name String oneliner reference recommended length is 2 words at max description Integer index number of corresponding Texture not recommended for freqeunt use. please use textureID for improved readabillity. Categories function Return Usage Notation mType String fluff and lore shown in onlook-action recommended length is 40 characters at max catType String oneliner reference recommended length is 2 words at max partType Integer index number of corresponding Texture not recommended for freqeunt use. please use textureID for improved readabillity. family Integer index number of corresponding Texture not recommended for freqeunt use. please use textureID for improved readabillity. ToString function Return Usage Notation mechanicalSummary String fluff and lore shown in onlook-action recommended length is 40 characters at max modTime String oneliner reference recommended length is 2 words at max cooldownTime Integer index number of corresponding Texture not recommended for freqeunt use. please use textureID for improved readabillity. Usage function Return Usage Notation rarity String fluff and lore shown in onlook-action recommended length is 40 characters at max event String oneliner reference recommended length is 2 words at max","title":"KitPart"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/#kitpart","text":"","title":"KitPart"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/#introduction","text":"KitParts are the single buildingblocks for KitSets .","title":"Introduction"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/#types","text":"","title":"Types"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/#core","text":"The most Important. It defines its Description and its use! Therefore its Mandatory for every Kit! It also determinds possible Upgrades !","title":"Core"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/#upgrade","text":"The Improvement. It specialices the Kit in a certain of aspect! This part is optional ! It may debuff other aspects in some rare cases!","title":"Upgrade"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/#trait","text":"A passive Benefit. It gives a small generall advantage under conditions! This part is optional ! needs to be on same plane , is independant of the Core!","title":"Trait"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/#common-components","text":"","title":"Common Components"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/#general","text":"","title":"General"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/#categories","text":"","title":"Categories"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/#tostring","text":"","title":"ToString"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitPart/#usage","text":"","title":"Usage"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitSet/","text":"KitSet Introduction Everything a Player or Actor can do, is by their Kits. They are Abillities, Gear and Traits! Pros of Systems for Interactions small: It flattens the Learning-curve It guarantees their compatabillity It encourages Systemic thinking It reinforces Synergices between Entities Parts of Kit Core The most Important. It defines its Description and its use! Therefore its Mandatory for every Kit! It also determinds possible Upgrades ! Upgrade The Improvement. It specialices the Kit in a certain of aspect! This part is optional ! It may debuff other aspects in some rare cases! Trait A passive Benefit. It gives a small generall advantage under conditions! This part is optional ! needs to be on same plane , is independant of the Core! Example Verbalicing a Kit is easy, by this formular: [Adjective of Upgrade ] [Descriptor of Core ] of [Trait of Benefit ] [enduring] [Crispyfier] of [Hitmans] gives Entities with property enflamable the Condititon. Burning increases duration but decreases damage of Burning. killing Actors with that Kit gives 10 credits .","title":"Overview"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitSet/#kitset","text":"","title":"KitSet"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitSet/#introduction","text":"Everything a Player or Actor can do, is by their Kits. They are Abillities, Gear and Traits! Pros of Systems for Interactions small: It flattens the Learning-curve It guarantees their compatabillity It encourages Systemic thinking It reinforces Synergices between Entities","title":"Introduction"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitSet/#parts-of-kit","text":"","title":"Parts of Kit"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitSet/#core","text":"The most Important. It defines its Description and its use! Therefore its Mandatory for every Kit! It also determinds possible Upgrades !","title":"Core"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitSet/#upgrade","text":"The Improvement. It specialices the Kit in a certain of aspect! This part is optional ! It may debuff other aspects in some rare cases!","title":"Upgrade"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitSet/#trait","text":"A passive Benefit. It gives a small generall advantage under conditions! This part is optional ! needs to be on same plane , is independant of the Core!","title":"Trait"},{"location":"CogsmosFramework/DemocrECS/Entity/KitSet/KitSet/#example","text":"Verbalicing a Kit is easy, by this formular: [Adjective of Upgrade ] [Descriptor of Core ] of [Trait of Benefit ] [enduring] [Crispyfier] of [Hitmans] gives Entities with property enflamable the Condititon. Burning increases duration but decreases damage of Burning. killing Actors with that Kit gives 10 credits .","title":"Example"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/Component/","text":"Components Introduction Components are instanciated Container for values, Entities dont have variables in itself due to DOP, Components are the pendant of Variables in OOP. They are referenced in Entities and Templates and gives them meaning and context. Usages Components have no functions and should not be manipulated by direct means. Workflow: Adding new Components click here to see its content! Snippet write SN: Component to use click here to see its content!","title":"Overview"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/Component/#components","text":"","title":"Components"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/Component/#introduction","text":"Components are instanciated Container for values, Entities dont have variables in itself due to DOP, Components are the pendant of Variables in OOP. They are referenced in Entities and Templates and gives them meaning and context.","title":"Introduction"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/Component/#usages","text":"Components have no functions and should not be manipulated by direct means.","title":"Usages"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/Component/#workflow-adding-new-components","text":"click here to see its content!","title":"Workflow: Adding new Components"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/Component/#snippet","text":"write SN: Component to use click here to see its content!","title":"Snippet"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/","text":"Components Nr Name 0 Description 1 Walkable 3 Layer 4 Magic Noise 5 Matrix Noise 6 Name 7 static Tileset Number (do not fill) 8 MetaData of LEC 9 Credits 10 Perks 11 Race name 12 role description 15 List of All Bodyparts 17 propabillity to get random hit in percent 18 Attribute mod 19 Attributes 20 Skillblock 21 Name 22 Limits 23 Carriage capacity 25 Paintollerance 26 Indirect _005_Character_Stats 27 racial enemies 28 racial friends 29 listing price 30 backpack slots 31 kit Category 33 cooldown 34 log entry 35 summary 36 setup time 37 layer of perception 38 kit Part 39 progression edited KitSet 41 position 42 role description 44 Streetname 45 Character name 46 List of Items 47 synonyms 48 Rarity 49 EffectEntity 51 Actors KitSets 52 Starting Kitsets Cheat 56 Gear 57 role description 58 Alternative Textures 59 Mod KitSet Data 60 base-kit reference 61 LootTable Data 62 role description 65 Tier 68 role description 69 KitSetFamily 70 role description 71 role description 72 role description 73 role description 74 role description 76 role description","title":"List"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/#components","text":"Nr Name 0 Description 1 Walkable 3 Layer 4 Magic Noise 5 Matrix Noise 6 Name 7 static Tileset Number (do not fill) 8 MetaData of LEC 9 Credits 10 Perks 11 Race name 12 role description 15 List of All Bodyparts 17 propabillity to get random hit in percent 18 Attribute mod 19 Attributes 20 Skillblock 21 Name 22 Limits 23 Carriage capacity 25 Paintollerance 26 Indirect _005_Character_Stats 27 racial enemies 28 racial friends 29 listing price 30 backpack slots 31 kit Category 33 cooldown 34 log entry 35 summary 36 setup time 37 layer of perception 38 kit Part 39 progression edited KitSet 41 position 42 role description 44 Streetname 45 Character name 46 List of Items 47 synonyms 48 Rarity 49 EffectEntity 51 Actors KitSets 52 Starting Kitsets Cheat 56 Gear 57 role description 58 Alternative Textures 59 Mod KitSet Data 60 base-kit reference 61 LootTable Data 62 role description 65 Tier 68 role description 69 KitSetFamily 70 role description 71 role description 72 role description 73 role description 74 role description 76 role description","title":"Components"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/0/","text":"C_0_DESCRIPTION nameToShow: Description description: Summary of the Entity in one sentence, to get a broad idea suggestion: It should feel like a cyncal critique of todays and tomorrows problems validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_0_DESCRIPTION"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/0/#c_0_description","text":"","title":"C_0_DESCRIPTION"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/0/#nametoshow","text":"Description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/0/#description","text":"Summary of the Entity in one sentence, to get a broad idea","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/0/#suggestion","text":"It should feel like a cyncal critique of todays and tomorrows problems","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/0/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/0/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/1/","text":"C_1_IS_WALKABLE nameToShow: Walkable description: determinds if an Actor can walk on this tile suggestion: Interactables are often but not neccesarilly unwalkable, Meat Tiles are validType: BOOLEAN validInputs: There is no by enumaration limited input-options.","title":"C_1_IS_WALKABLE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/1/#c_1_is_walkable","text":"","title":"C_1_IS_WALKABLE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/1/#nametoshow","text":"Walkable","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/1/#description","text":"determinds if an Actor can walk on this tile","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/1/#suggestion","text":"Interactables are often but not neccesarilly unwalkable, Meat Tiles are","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/1/#validtype","text":"BOOLEAN","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/1/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/10/","text":"C_10_PERKS nameToShow: Perks description: Unique advantages of the Char suggestion: WIP, not implemented,has no influence at the moment validType: ARRAY validInputs: There is no by enumaration limited input-options.","title":"C_10_PERKS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/10/#c_10_perks","text":"","title":"C_10_PERKS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/10/#nametoshow","text":"Perks","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/10/#description","text":"Unique advantages of the Char","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/10/#suggestion","text":"WIP, not implemented,has no influence at the moment","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/10/#validtype","text":"ARRAY","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/10/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/11/","text":"C_11_RACE_NAME nameToShow: Race name description: toString of the Template name suggestion: Are used as Index for API_001_Atlas.ActorRace , CAPSLOCK is recommended validType: DYNAMIC_LIST validInputs: There are by enumaration limited options of inputs! DWARF ELF HUMAN ORC REPTILOID SENTDROID TROLL","title":"C_11_RACE_NAME"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/11/#c_11_race_name","text":"","title":"C_11_RACE_NAME"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/11/#nametoshow","text":"Race name","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/11/#description","text":"toString of the Template name","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/11/#suggestion","text":"Are used as Index for API_001_Atlas.ActorRace , CAPSLOCK is recommended","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/11/#validtype","text":"DYNAMIC_LIST","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/11/#validinputs","text":"There are by enumaration limited options of inputs! DWARF ELF HUMAN ORC REPTILOID SENTDROID TROLL","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/12/","text":"C_12_ATLAS_INDEX nameToShow: role description description: determinds the mousehover text suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_12_ATLAS_INDEX"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/12/#c_12_atlas_index","text":"","title":"C_12_ATLAS_INDEX"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/12/#nametoshow","text":"role description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/12/#description","text":"determinds the mousehover text","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/12/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/12/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/12/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/15/","text":"C_15_BODYPARTS nameToShow: List of All Bodyparts description: All Bodypart-template of Race suggestion: WIP, not implemented,has no influence at the moment validType: CONTAINER validInputs: There is no by enumaration limited input-options.","title":"C_15_BODYPARTS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/15/#c_15_bodyparts","text":"","title":"C_15_BODYPARTS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/15/#nametoshow","text":"List of All Bodyparts","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/15/#description","text":"All Bodypart-template of Race","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/15/#suggestion","text":"WIP, not implemented,has no influence at the moment","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/15/#validtype","text":"CONTAINER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/15/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/17/","text":"C_17_HITPROBABILLITY nameToShow: propabillity to get random hit in percent description: Bodypart hit % suggestion: validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_17_HITPROBABILLITY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/17/#c_17_hitprobabillity","text":"","title":"C_17_HITPROBABILLITY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/17/#nametoshow","text":"propabillity to get random hit in percent","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/17/#description","text":"Bodypart hit %","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/17/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/17/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/17/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/18/","text":"C_18_ATTRIBUTEMOD nameToShow: Attribute mod description: Single Attribute value of C_19 suggestion: modul of C_19, we recommend C_19 for usage validType: NULL validInputs: There is no by enumaration limited input-options.","title":"C_18_ATTRIBUTEMOD"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/18/#c_18_attributemod","text":"","title":"C_18_ATTRIBUTEMOD"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/18/#nametoshow","text":"Attribute mod","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/18/#description","text":"Single Attribute value of C_19","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/18/#suggestion","text":"modul of C_19, we recommend C_19 for usage","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/18/#validtype","text":"NULL","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/18/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/19/","text":"C_19_ATTRIBUTES nameToShow: Attributes description: add modifiers to the biological potential of an Actors suggestion: validType: STATIC_LIST validInputs: There are by enumaration limited options of inputs! AGILLITY CONSTITUTION STRENGTH REACTION LOGIC INTUITION WILLPOWER CHARISMA","title":"C_19_ATTRIBUTES"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/19/#c_19_attributes","text":"","title":"C_19_ATTRIBUTES"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/19/#nametoshow","text":"Attributes","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/19/#description","text":"add modifiers to the biological potential of an Actors","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/19/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/19/#validtype","text":"STATIC_LIST","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/19/#validinputs","text":"There are by enumaration limited options of inputs! AGILLITY CONSTITUTION STRENGTH REACTION LOGIC INTUITION WILLPOWER CHARISMA","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/20/","text":"C_20_SKILLBLOCK nameToShow: Skillblock description: List of all skills and their values suggestion: validType: {ASSENSING:4, CONCEPTUALICING:2, COPING:7, CRAFTING:0, DEBUGGING:5, ENDURING:6, FILTERING:8, PERCEVING:3, PHYLOSOPHIZING:1, REPRESSING:10, SILENCING:11, SNEAKING:9} validInputs: There is no by enumaration limited input-options.","title":"C_20_SKILLBLOCK"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/20/#c_20_skillblock","text":"","title":"C_20_SKILLBLOCK"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/20/#nametoshow","text":"Skillblock","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/20/#description","text":"List of all skills and their values","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/20/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/20/#validtype","text":"{ASSENSING:4, CONCEPTUALICING:2, COPING:7, CRAFTING:0, DEBUGGING:5, ENDURING:6, FILTERING:8, PERCEVING:3, PHYLOSOPHIZING:1, REPRESSING:10, SILENCING:11, SNEAKING:9}","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/20/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/21/","text":"C_21_POS_TO_WALK_TO nameToShow: Name description: often used Reference name suggestion: often the same as C_6, maybe shorter validType: VECTOR2D validInputs: There is no by enumaration limited input-options.","title":"C_21_POS_TO_WALK_TO"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/21/#c_21_pos_to_walk_to","text":"","title":"C_21_POS_TO_WALK_TO"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/21/#nametoshow","text":"Name","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/21/#description","text":"often used Reference name","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/21/#suggestion","text":"often the same as C_6, maybe shorter","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/21/#validtype","text":"VECTOR2D","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/21/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/22/","text":"C_22_LIMITS nameToShow: Limits description: max. succeses per dice-role suggestion: Gets calculatet on runtime by Actors Attributes validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_22_LIMITS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/22/#c_22_limits","text":"","title":"C_22_LIMITS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/22/#nametoshow","text":"Limits","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/22/#description","text":"max. succeses per dice-role","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/22/#suggestion","text":"Gets calculatet on runtime by Actors Attributes","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/22/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/22/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/23/","text":"C_23_CARRIAGE nameToShow: Carriage capacity description: max units Actor can carry suggestion: Gets calculatet on runtime by Actors Attributes validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_23_CARRIAGE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/23/#c_23_carriage","text":"","title":"C_23_CARRIAGE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/23/#nametoshow","text":"Carriage capacity","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/23/#description","text":"max units Actor can carry","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/23/#suggestion","text":"Gets calculatet on runtime by Actors Attributes","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/23/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/23/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/25/","text":"C_25_MAX_KITSETS nameToShow: Paintollerance description: current maxm of kitsets,integral to Char-progression suggestion: not counting Kitsets from Starting-cheat validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_25_MAX_KITSETS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/25/#c_25_max_kitsets","text":"","title":"C_25_MAX_KITSETS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/25/#nametoshow","text":"Paintollerance","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/25/#description","text":"current maxm of kitsets,integral to Char-progression","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/25/#suggestion","text":"not counting Kitsets from Starting-cheat","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/25/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/25/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/26/","text":"C_26_INDIRECT_STATS nameToShow: Indirect _005_Character_Stats description: name of its fightingstyle suggestion: validType: DICTIONARY validInputs: There is no by enumaration limited input-options.","title":"C_26_INDIRECT_STATS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/26/#c_26_indirect_stats","text":"","title":"C_26_INDIRECT_STATS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/26/#nametoshow","text":"Indirect _005_Character_Stats","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/26/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/26/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/26/#validtype","text":"DICTIONARY","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/26/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/27/","text":"C_27_RACIAL_ENEMIES nameToShow: racial enemies description: choose races for prejudices suggestion: validType: STATIC_LIST validInputs: There are by enumaration limited options of inputs! DWARF ELF HUMAN ORC REPTILOID SENTDROID TROLL","title":"C_27_RACIAL_ENEMIES"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/27/#c_27_racial_enemies","text":"","title":"C_27_RACIAL_ENEMIES"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/27/#nametoshow","text":"racial enemies","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/27/#description","text":"choose races for prejudices","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/27/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/27/#validtype","text":"STATIC_LIST","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/27/#validinputs","text":"There are by enumaration limited options of inputs! DWARF ELF HUMAN ORC REPTILOID SENTDROID TROLL","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/28/","text":"C_28_RACIAL_FRIENDS nameToShow: racial friends description: choose races for pride suggestion: yes this is reference validType: STATIC_LIST validInputs: There are by enumaration limited options of inputs! DWARF ELF HUMAN ORC REPTILOID SENTDROID TROLL","title":"C_28_RACIAL_FRIENDS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/28/#c_28_racial_friends","text":"","title":"C_28_RACIAL_FRIENDS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/28/#nametoshow","text":"racial friends","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/28/#description","text":"choose races for pride","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/28/#suggestion","text":"yes this is reference","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/28/#validtype","text":"STATIC_LIST","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/28/#validinputs","text":"There are by enumaration limited options of inputs! DWARF ELF HUMAN ORC REPTILOID SENTDROID TROLL","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/29/","text":"C_29_LISTING_PRICE nameToShow: listing price description: the usual price when its bought suggestion: WIP, not implemented,has no influence at the moment validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_29_LISTING_PRICE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/29/#c_29_listing_price","text":"","title":"C_29_LISTING_PRICE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/29/#nametoshow","text":"listing price","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/29/#description","text":"the usual price when its bought","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/29/#suggestion","text":"WIP, not implemented,has no influence at the moment","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/29/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/29/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/3/","text":"C_3_LAYER nameToShow: Layer description: Determinds on which layer the entity is indexed on Map suggestion: Magics and Matrix are not implemented yet! validType: STATIC_LIST validInputs: There are by enumaration limited options of inputs! ACTOR PLAYER MEAT_GROUND MEAT_INTERACTABLE MATRIX_GROUND MATRIX_INTERACTABLE MAGIC_GROUND MAGIC_INTERACTABLE SELECTION CONDITION","title":"C_3_LAYER"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/3/#c_3_layer","text":"","title":"C_3_LAYER"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/3/#nametoshow","text":"Layer","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/3/#description","text":"Determinds on which layer the entity is indexed on Map","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/3/#suggestion","text":"Magics and Matrix are not implemented yet!","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/3/#validtype","text":"STATIC_LIST","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/3/#validinputs","text":"There are by enumaration limited options of inputs! ACTOR PLAYER MEAT_GROUND MEAT_INTERACTABLE MATRIX_GROUND MATRIX_INTERACTABLE MAGIC_GROUND MAGIC_INTERACTABLE SELECTION CONDITION","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/30/","text":"C_30_NEEDED_BACKPACK_SLOTS nameToShow: backpack slots description: size and wight taking up to carry suggestion: WIP, not implemented,has no influence at the moment validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_30_NEEDED_BACKPACK_SLOTS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/30/#c_30_needed_backpack_slots","text":"","title":"C_30_NEEDED_BACKPACK_SLOTS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/30/#nametoshow","text":"backpack slots","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/30/#description","text":"size and wight taking up to carry","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/30/#suggestion","text":"WIP, not implemented,has no influence at the moment","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/30/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/30/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/31/","text":"C_31_KIT_CAT_TYPE nameToShow: kit Category description: type of kit of the Surv9 suggestion: validType: STATIC_LIST validInputs: There are by enumaration limited options of inputs! HACK DRONE CYBERWARE RITE SPELL INFUSION GUN MEELE ARMOR","title":"C_31_KIT_CAT_TYPE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/31/#c_31_kit_cat_type","text":"","title":"C_31_KIT_CAT_TYPE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/31/#nametoshow","text":"kit Category","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/31/#description","text":"type of kit of the Surv9","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/31/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/31/#validtype","text":"STATIC_LIST","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/31/#validinputs","text":"There are by enumaration limited options of inputs! HACK DRONE CYBERWARE RITE SPELL INFUSION GUN MEELE ARMOR","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/33/","text":"C_33_COOLDOWN_TIMER nameToShow: cooldown description: by actions of player suggestion: guide value: Rarity*1 validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_33_COOLDOWN_TIMER"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/33/#c_33_cooldown_timer","text":"","title":"C_33_COOLDOWN_TIMER"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/33/#nametoshow","text":"cooldown","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/33/#description","text":"by actions of player","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/33/#suggestion","text":"guide value: Rarity*1","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/33/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/33/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/34/","text":"C_34_LOG_TO_STRING nameToShow: log entry description: is shown to the player in logs suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_34_LOG_TO_STRING"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/34/#c_34_log_to_string","text":"","title":"C_34_LOG_TO_STRING"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/34/#nametoshow","text":"log entry","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/34/#description","text":"is shown to the player in logs","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/34/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/34/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/34/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/35/","text":"C_35_KIT_MECHANICAL_SUMMARY nameToShow: summary description: shown as short explaination of usage suggestion: about 80 characters at max validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_35_KIT_MECHANICAL_SUMMARY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/35/#c_35_kit_mechanical_summary","text":"","title":"C_35_KIT_MECHANICAL_SUMMARY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/35/#nametoshow","text":"summary","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/35/#description","text":"shown as short explaination of usage","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/35/#suggestion","text":"about 80 characters at max","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/35/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/35/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/36/","text":"C_36_KIT_MOD_TIME nameToShow: setup time description: number of Panicrooms before its usable suggestion: guide value: Rarity*1,5 validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_36_KIT_MOD_TIME"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/36/#c_36_kit_mod_time","text":"","title":"C_36_KIT_MOD_TIME"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/36/#nametoshow","text":"setup time","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/36/#description","text":"number of Panicrooms before its usable","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/36/#suggestion","text":"guide value: Rarity*1,5","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/36/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/36/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/37/","text":"C_37_M_TYPE nameToShow: layer of perception description: name of its fightingstyle suggestion: validType: STRING validInputs: There are by enumaration limited options of inputs! MEAT MAGIC MATRIX","title":"C_37_M_TYPE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/37/#c_37_m_type","text":"","title":"C_37_M_TYPE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/37/#nametoshow","text":"layer of perception","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/37/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/37/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/37/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/37/#validinputs","text":"There are by enumaration limited options of inputs! MEAT MAGIC MATRIX","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/38/","text":"C_38_KIT_PART_TYPE nameToShow: kit Part description: place in Kitset suggestion: Base: Main definition, Mod: Specialication, Appendix: Side-effect validType: STRING validInputs: There are by enumaration limited options of inputs! BASE MOD APPENDIX","title":"C_38_KIT_PART_TYPE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/38/#c_38_kit_part_type","text":"","title":"C_38_KIT_PART_TYPE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/38/#nametoshow","text":"kit Part","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/38/#description","text":"place in Kitset","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/38/#suggestion","text":"Base: Main definition, Mod: Specialication, Appendix: Side-effect","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/38/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/38/#validinputs","text":"There are by enumaration limited options of inputs! BASE MOD APPENDIX","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/39/","text":"C_39_KITSLOT_PROGRESSION nameToShow: progression edited KitSet description: countdown untill the Kit in its Restroom is finished suggestion: validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_39_KITSLOT_PROGRESSION"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/39/#c_39_kitslot_progression","text":"","title":"C_39_KITSLOT_PROGRESSION"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/39/#nametoshow","text":"progression edited KitSet","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/39/#description","text":"countdown untill the Kit in its Restroom is finished","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/39/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/39/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/39/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/4/","text":"C_4_MAGIC_NOISE nameToShow: Magic Noise description: Determinds the handicap for sourronding dice tosses suggestion: WIP, not implemented,has no influence at the moment validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_4_MAGIC_NOISE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/4/#c_4_magic_noise","text":"","title":"C_4_MAGIC_NOISE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/4/#nametoshow","text":"Magic Noise","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/4/#description","text":"Determinds the handicap for sourronding dice tosses","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/4/#suggestion","text":"WIP, not implemented,has no influence at the moment","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/4/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/4/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/41/","text":"C_41_PERK_PROGRESSION nameToShow: position description: X and Y on the tilemap suggestion: validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_41_PERK_PROGRESSION"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/41/#c_41_perk_progression","text":"","title":"C_41_PERK_PROGRESSION"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/41/#nametoshow","text":"position","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/41/#description","text":"X and Y on the tilemap","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/41/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/41/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/41/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/42/","text":"C_42_ROLE_VARIETY nameToShow: role description description: name of its fightingstyle suggestion: validType: ARRAY validInputs: There is no by enumaration limited input-options.","title":"C_42_ROLE_VARIETY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/42/#c_42_role_variety","text":"","title":"C_42_ROLE_VARIETY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/42/#nametoshow","text":"role description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/42/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/42/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/42/#validtype","text":"ARRAY","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/42/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/44/","text":"C_44_STREETNAME nameToShow: Streetname description: unique Title suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_44_STREETNAME"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/44/#c_44_streetname","text":"","title":"C_44_STREETNAME"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/44/#nametoshow","text":"Streetname","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/44/#description","text":"unique Title","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/44/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/44/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/44/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/45/","text":"C_45_CHARACTER_NAME nameToShow: Character name description: the by parents given name,used outsides the Shadows suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_45_CHARACTER_NAME"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/45/#c_45_character_name","text":"","title":"C_45_CHARACTER_NAME"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/45/#nametoshow","text":"Character name","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/45/#description","text":"the by parents given name,used outsides the Shadows","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/45/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/45/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/45/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/46/","text":"C_46_ACTOR_ITEMS nameToShow: List of Items description: often owned by an Actor suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_46_ACTOR_ITEMS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/46/#c_46_actor_items","text":"","title":"C_46_ACTOR_ITEMS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/46/#nametoshow","text":"List of Items","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/46/#description","text":"often owned by an Actor","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/46/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/46/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/46/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/47/","text":"C_47_SYNONYM nameToShow: synonyms description: list of differnt names for this spcialication suggestion: validType: ARRAY validInputs: There is no by enumaration limited input-options.","title":"C_47_SYNONYM"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/47/#c_47_synonym","text":"","title":"C_47_SYNONYM"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/47/#nametoshow","text":"synonyms","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/47/#description","text":"list of differnt names for this spcialication","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/47/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/47/#validtype","text":"ARRAY","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/47/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/48/","text":"C_48_RARITY nameToShow: Rarity description: chance to loot on a scale of 1 to 10 suggestion: 1: Drek, 5: Fixer, 10: R&D-Prototype validType: STATIC_LIST validInputs: There are by enumaration limited options of inputs! Drek Worn out Do it yourself Wageslave Industrial Upper class Federal Fixer Elite runner Megacon prototype","title":"C_48_RARITY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/48/#c_48_rarity","text":"","title":"C_48_RARITY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/48/#nametoshow","text":"Rarity","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/48/#description","text":"chance to loot on a scale of 1 to 10","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/48/#suggestion","text":"1: Drek, 5: Fixer, 10: R&D-Prototype","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/48/#validtype","text":"STATIC_LIST","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/48/#validinputs","text":"There are by enumaration limited options of inputs! Drek Worn out Do it yourself Wageslave Industrial Upper class Federal Fixer Elite runner Megacon prototype","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/49/","text":"C_49_EVENT_REFERENCE nameToShow: EffectEntity description: Is used to build EffectEntity suggestion: validType: EFFECT validInputs: There is no by enumaration limited input-options.","title":"C_49_EVENT_REFERENCE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/49/#c_49_event_reference","text":"","title":"C_49_EVENT_REFERENCE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/49/#nametoshow","text":"EffectEntity","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/49/#description","text":"Is used to build EffectEntity","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/49/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/49/#validtype","text":"EFFECT","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/49/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/5/","text":"C_5_MATRIX_NOISE nameToShow: Matrix Noise description: Determinds the handicap for sourronding dice tosses suggestion: WIP, not implemented,has no influence at the moment validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_5_MATRIX_NOISE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/5/#c_5_matrix_noise","text":"","title":"C_5_MATRIX_NOISE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/5/#nametoshow","text":"Matrix Noise","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/5/#description","text":"Determinds the handicap for sourronding dice tosses","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/5/#suggestion","text":"WIP, not implemented,has no influence at the moment","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/5/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/5/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/51/","text":"C_51_PLAYER_KITSETS nameToShow: Actors KitSets description: list of kitsets suggestion: validType: ARRAY validInputs: There is no by enumaration limited input-options.","title":"C_51_PLAYER_KITSETS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/51/#c_51_player_kitsets","text":"","title":"C_51_PLAYER_KITSETS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/51/#nametoshow","text":"Actors KitSets","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/51/#description","text":"list of kitsets","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/51/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/51/#validtype","text":"ARRAY","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/51/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/52/","text":"C_52_STARTING_KITSETS nameToShow: Starting Kitsets Cheat description: adds their indexes as kitsets to the Character by openeing the menue suggestion: validType: ARRAY validInputs: There is no by enumaration limited input-options.","title":"C_52_STARTING_KITSETS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/52/#c_52_starting_kitsets","text":"","title":"C_52_STARTING_KITSETS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/52/#nametoshow","text":"Starting Kitsets Cheat","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/52/#description","text":"adds their indexes as kitsets to the Character by openeing the menue","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/52/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/52/#validtype","text":"ARRAY","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/52/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/56/","text":"C_56_GEAR nameToShow: Gear description: name of its fightingstyle suggestion: validType: NULL validInputs: There is no by enumaration limited input-options.","title":"C_56_GEAR"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/56/#c_56_gear","text":"","title":"C_56_GEAR"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/56/#nametoshow","text":"Gear","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/56/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/56/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/56/#validtype","text":"NULL","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/56/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/57/","text":"C_57_HITPOINTS nameToShow: role description description: name of its fightingstyle suggestion: validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_57_HITPOINTS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/57/#c_57_hitpoints","text":"","title":"C_57_HITPOINTS"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/57/#nametoshow","text":"role description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/57/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/57/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/57/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/57/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/58/","text":"C_58_ALTERNATIVE_TEXTURES nameToShow: Alternative Textures description: Can be swapped by change statmode suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_58_ALTERNATIVE_TEXTURES"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/58/#c_58_alternative_textures","text":"","title":"C_58_ALTERNATIVE_TEXTURES"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/58/#nametoshow","text":"Alternative Textures","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/58/#description","text":"Can be swapped by change statmode","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/58/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/58/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/58/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/59/","text":"C_59_KIT_MOD_CHANGE nameToShow: Mod KitSet Data description: Metadata for ModKitPart suggestion: validType: ARRAY validInputs: There is no by enumaration limited input-options.","title":"C_59_KIT_MOD_CHANGE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/59/#c_59_kit_mod_change","text":"","title":"C_59_KIT_MOD_CHANGE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/59/#nametoshow","text":"Mod KitSet Data","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/59/#description","text":"Metadata for ModKitPart","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/59/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/59/#validtype","text":"ARRAY","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/59/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/6/","text":"C_6_NAME nameToShow: Name description: short reference shown in the most cases suggestion: max 2 words / 15 chars validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_6_NAME"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/6/#c_6_name","text":"","title":"C_6_NAME"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/6/#nametoshow","text":"Name","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/6/#description","text":"short reference shown in the most cases","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/6/#suggestion","text":"max 2 words / 15 chars","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/6/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/6/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/60/","text":"C_60_BASE_KIT_REFERENCE nameToShow: base-kit reference description: choose the kit to specialice suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_60_BASE_KIT_REFERENCE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/60/#c_60_base_kit_reference","text":"","title":"C_60_BASE_KIT_REFERENCE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/60/#nametoshow","text":"base-kit reference","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/60/#description","text":"choose the kit to specialice","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/60/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/60/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/60/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/61/","text":"C_61_LOOT_TABLE nameToShow: LootTable Data description: has the variety and probabillity of drops suggestion: validType: DICTIONARY validInputs: There is no by enumaration limited input-options.","title":"C_61_LOOT_TABLE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/61/#c_61_loot_table","text":"","title":"C_61_LOOT_TABLE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/61/#nametoshow","text":"LootTable Data","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/61/#description","text":"has the variety and probabillity of drops","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/61/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/61/#validtype","text":"DICTIONARY","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/61/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/62/","text":"C_62_LOOT_STATE nameToShow: role description description: name of its fightingstyle suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_62_LOOT_STATE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/62/#c_62_loot_state","text":"","title":"C_62_LOOT_STATE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/62/#nametoshow","text":"role description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/62/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/62/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/62/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/62/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/65/","text":"C_65_TIER nameToShow: Tier description: quality of Item suggestion: on a scale of 1 to 10 validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_65_TIER"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/65/#c_65_tier","text":"","title":"C_65_TIER"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/65/#nametoshow","text":"Tier","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/65/#description","text":"quality of Item","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/65/#suggestion","text":"on a scale of 1 to 10","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/65/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/65/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/68/","text":"C_68_KITVENTORY nameToShow: role description description: name of its fightingstyle suggestion: validType: ARRAY validInputs: There is no by enumaration limited input-options.","title":"C_68_KITVENTORY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/68/#c_68_kitventory","text":"","title":"C_68_KITVENTORY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/68/#nametoshow","text":"role description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/68/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/68/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/68/#validtype","text":"ARRAY","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/68/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/69/","text":"C_69_KITSET_FAMILY nameToShow: KitSetFamily description: Index of the BaseKitPart suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_69_KITSET_FAMILY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/69/#c_69_kitset_family","text":"","title":"C_69_KITSET_FAMILY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/69/#nametoshow","text":"KitSetFamily","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/69/#description","text":"Index of the BaseKitPart","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/69/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/69/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/69/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/7/","text":"C_7_STATIC_TILESET_NR nameToShow: static Tileset Number (do not fill) description: Number of tile in Master-atlas suggestion: Will be dynamically found at Bootstrap (at parsing tilesets) validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_7_STATIC_TILESET_NR"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/7/#c_7_static_tileset_nr","text":"","title":"C_7_STATIC_TILESET_NR"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/7/#nametoshow","text":"static Tileset Number (do not fill)","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/7/#description","text":"Number of tile in Master-atlas","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/7/#suggestion","text":"Will be dynamically found at Bootstrap (at parsing tilesets)","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/7/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/7/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/70/","text":"C_70_SELECTED_TARGET nameToShow: role description description: name of its fightingstyle suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_70_SELECTED_TARGET"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/70/#c_70_selected_target","text":"","title":"C_70_SELECTED_TARGET"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/70/#nametoshow","text":"role description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/70/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/70/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/70/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/70/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/71/","text":"C_71_LEC_META_BY nameToShow: role description description: name of its fightingstyle suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_71_LEC_META_BY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/71/#c_71_lec_meta_by","text":"","title":"C_71_LEC_META_BY"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/71/#nametoshow","text":"role description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/71/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/71/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/71/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/71/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/72/","text":"C_72_LEC_META_USE nameToShow: role description description: name of its fightingstyle suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_72_LEC_META_USE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/72/#c_72_lec_meta_use","text":"","title":"C_72_LEC_META_USE"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/72/#nametoshow","text":"role description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/72/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/72/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/72/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/72/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/73/","text":"C_73_KITSET_OF_EVENT nameToShow: role description description: name of its fightingstyle suggestion: validType: KitSetEntity validInputs: There is no by enumaration limited input-options.","title":"C_73_KITSET_OF_EVENT"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/73/#c_73_kitset_of_event","text":"","title":"C_73_KITSET_OF_EVENT"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/73/#nametoshow","text":"role description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/73/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/73/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/73/#validtype","text":"KitSetEntity","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/73/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/74/","text":"C_74_EVENT_MAIN_DICT nameToShow: role description description: name of its fightingstyle suggestion: validType: DICTIONARY validInputs: There is no by enumaration limited input-options.","title":"C_74_EVENT_MAIN_DICT"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/74/#c_74_event_main_dict","text":"","title":"C_74_EVENT_MAIN_DICT"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/74/#nametoshow","text":"role description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/74/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/74/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/74/#validtype","text":"DICTIONARY","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/74/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/76/","text":"C_76_EVENT_REFERENCE_DICT nameToShow: role description description: name of its fightingstyle suggestion: validType: STRING validInputs: There is no by enumaration limited input-options.","title":"C_76_EVENT_REFERENCE_DICT"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/76/#c_76_event_reference_dict","text":"","title":"C_76_EVENT_REFERENCE_DICT"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/76/#nametoshow","text":"role description","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/76/#description","text":"name of its fightingstyle","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/76/#suggestion","text":"","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/76/#validtype","text":"STRING","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/76/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/8/","text":"C_8_LEC_META nameToShow: MetaData of LEC description: Name of the Texture to be shown suggestion: tilesetname rownumber collumnumber of its picture in folder : GameData/Tiled/Tileset validType: STATIC_LIST validInputs: There are by enumaration limited options of inputs! Terrain_0_0 Terrain_0_1 Terrain_0_2 Terrain_0_13 Terrain_0_14 Terrain_0_15 Terrain_1_0 Terrain_1_1 Terrain_1_2 Terrain_1_3 Terrain_1_13 Terrain_1_14 Terrain_1_15 Terrain_2_0 Terrain_2_1 Terrain_2_13 Terrain_2_14 Terrain_2_15 Terrain_3_0 Terrain_4_0 Terrain_4_13 Terrain_4_14 Terrain_4_15 Terrain_5_13 Terrain_5_15 Terrain_6_13 Terrain_6_14 Terrain_6_15 Indoors_0_13 Indoors_1_13 Indoors_0_0 Indoors_0_1 Indoors_0_2 Indoors_0_3 Indoors_0_6 Indoors_0_7 Indoors_0_8 Indoors_0_9 Indoors_1_0 Indoors_1_1 Indoors_1_2 Indoors_1_3 Indoors_1_6 Indoors_1_7 Indoors_1_8 Indoors_1_9 Indoors_2_0 Indoors_2_1 Indoors_2_2 Indoors_2_6 Indoors_2_7 Indoors_2_8 Indoors_3_0 Indoors_3_1 Indoors_3_6 Indoors_3_7 Indoors_6_0 Indoors_6_1 Indoors_8_0 Indoors_8_1 Indoors_8_3 Indoors_8_4 Indoors_10_0 Indoors_10_1 Indoors_10_2 Indoors_10_4 POI_0_0 POI_0_2 POI_0_4 POI_0_6 POI_0_8 POI_0_10 POI_0_12 POI_0_14 POI_2_0 POI_2_1 General_0_0 General_0_1 General_0_2 General_0_3 General_0_4 General_0_5 General_2_0 General_4_0 General_4_1 General_4_2 Marker_0_0 Marker_0_1 Marker_0_2 Marker_0_3 Marker_2_0 Marker_2_1 Marker_2_2 Marker_3_0 Marker_3_1 Marker_3_2 Marker_5_0 Marker_5_1 Marker_5_2 Nature_0_0 Decoration_0_0 Decoration_0_1 Decoration_0_2 Decoration_0_3 Decoration_0_4 Decoration_0_5 Decoration_0_6 Decoration_0_7 Decoration_0_8 Decoration_0_9 Decoration_0_10 Decoration_0_11 Decoration_0_12 Decoration_1_0 Decoration_1_1 Decoration_1_2 Decoration_2_0 Shop_2_2 Decoration_2_2 Decoration_3_0 Decoration_3_1 Decoration_3_2 Decoration_4_0 Decoration_4_1 Decoration_4_2 Decoration_5_0 Decoration_5_2 Decoration_6_0 Decoration_6_2 Decoration_7_2 Decoration_8_2 Decoration_9_2 Security_0_0 Security_0_1 Security_0_2 Security_1_0 Security_1_1 Security_1_2 Security_1_6 Security_1_7 Security_1_8 Security_2_0 Security_2_1 Security_2_2 Security_2_6 Security_2_7 Security_2_8 Security_3_0 Security_3_1 Security_3_2 Security_3_6 Security_3_7 Security_4_0 Security_4_1 Security_4_2 Conditions_0_0 Conditions_0_1 Conditions_0_2 Shop_0_0 Shop_0_1 Shop_0_2 Shop_0_3 Shop_1_0 Shop_1_1 Shop_1_2 Shop_1_3 Shop_2_0 Shop_2_1 Shop_2_3 Shop_3_0 Shop_3_1 Shop_3_2 Shop_3_3 Actors_0_0 Actors_0_2 Actors_0_4 Actors_0_6 Actors_2_0 Actors_2_2 Actors_2_4 Actors_2_6 Actors_4_0 Actors_4_2 Actors_4_4 Actors_4_6 Actors_6_3","title":"C_8_LEC_META"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/8/#c_8_lec_meta","text":"","title":"C_8_LEC_META"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/8/#nametoshow","text":"MetaData of LEC","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/8/#description","text":"Name of the Texture to be shown","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/8/#suggestion","text":"tilesetname rownumber collumnumber of its picture in folder : GameData/Tiled/Tileset","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/8/#validtype","text":"STATIC_LIST","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/8/#validinputs","text":"There are by enumaration limited options of inputs! Terrain_0_0 Terrain_0_1 Terrain_0_2 Terrain_0_13 Terrain_0_14 Terrain_0_15 Terrain_1_0 Terrain_1_1 Terrain_1_2 Terrain_1_3 Terrain_1_13 Terrain_1_14 Terrain_1_15 Terrain_2_0 Terrain_2_1 Terrain_2_13 Terrain_2_14 Terrain_2_15 Terrain_3_0 Terrain_4_0 Terrain_4_13 Terrain_4_14 Terrain_4_15 Terrain_5_13 Terrain_5_15 Terrain_6_13 Terrain_6_14 Terrain_6_15 Indoors_0_13 Indoors_1_13 Indoors_0_0 Indoors_0_1 Indoors_0_2 Indoors_0_3 Indoors_0_6 Indoors_0_7 Indoors_0_8 Indoors_0_9 Indoors_1_0 Indoors_1_1 Indoors_1_2 Indoors_1_3 Indoors_1_6 Indoors_1_7 Indoors_1_8 Indoors_1_9 Indoors_2_0 Indoors_2_1 Indoors_2_2 Indoors_2_6 Indoors_2_7 Indoors_2_8 Indoors_3_0 Indoors_3_1 Indoors_3_6 Indoors_3_7 Indoors_6_0 Indoors_6_1 Indoors_8_0 Indoors_8_1 Indoors_8_3 Indoors_8_4 Indoors_10_0 Indoors_10_1 Indoors_10_2 Indoors_10_4 POI_0_0 POI_0_2 POI_0_4 POI_0_6 POI_0_8 POI_0_10 POI_0_12 POI_0_14 POI_2_0 POI_2_1 General_0_0 General_0_1 General_0_2 General_0_3 General_0_4 General_0_5 General_2_0 General_4_0 General_4_1 General_4_2 Marker_0_0 Marker_0_1 Marker_0_2 Marker_0_3 Marker_2_0 Marker_2_1 Marker_2_2 Marker_3_0 Marker_3_1 Marker_3_2 Marker_5_0 Marker_5_1 Marker_5_2 Nature_0_0 Decoration_0_0 Decoration_0_1 Decoration_0_2 Decoration_0_3 Decoration_0_4 Decoration_0_5 Decoration_0_6 Decoration_0_7 Decoration_0_8 Decoration_0_9 Decoration_0_10 Decoration_0_11 Decoration_0_12 Decoration_1_0 Decoration_1_1 Decoration_1_2 Decoration_2_0 Shop_2_2 Decoration_2_2 Decoration_3_0 Decoration_3_1 Decoration_3_2 Decoration_4_0 Decoration_4_1 Decoration_4_2 Decoration_5_0 Decoration_5_2 Decoration_6_0 Decoration_6_2 Decoration_7_2 Decoration_8_2 Decoration_9_2 Security_0_0 Security_0_1 Security_0_2 Security_1_0 Security_1_1 Security_1_2 Security_1_6 Security_1_7 Security_1_8 Security_2_0 Security_2_1 Security_2_2 Security_2_6 Security_2_7 Security_2_8 Security_3_0 Security_3_1 Security_3_2 Security_3_6 Security_3_7 Security_4_0 Security_4_1 Security_4_2 Conditions_0_0 Conditions_0_1 Conditions_0_2 Shop_0_0 Shop_0_1 Shop_0_2 Shop_0_3 Shop_1_0 Shop_1_1 Shop_1_2 Shop_1_3 Shop_2_0 Shop_2_1 Shop_2_3 Shop_3_0 Shop_3_1 Shop_3_2 Shop_3_3 Actors_0_0 Actors_0_2 Actors_0_4 Actors_0_6 Actors_2_0 Actors_2_2 Actors_2_4 Actors_2_6 Actors_4_0 Actors_4_2 Actors_4_4 Actors_4_6 Actors_6_3","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/9/","text":"C_9_CREDITS_ACCOUNT nameToShow: Credits description: Amount of money in possesion suggestion: Implemented but no Influence / Usage validType: INTEGER validInputs: There is no by enumaration limited input-options.","title":"C_9_CREDITS_ACCOUNT"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/9/#c_9_credits_account","text":"","title":"C_9_CREDITS_ACCOUNT"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/9/#nametoshow","text":"Credits","title":"nameToShow:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/9/#description","text":"Amount of money in possesion","title":"description:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/9/#suggestion","text":"Implemented but no Influence / Usage","title":"suggestion:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/9/#validtype","text":"INTEGER","title":"validType:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Components/List/9/#validinputs","text":"There is no by enumaration limited input-options.","title":"validInputs:"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Conditions/List/","text":"List of Conditions Name Description BURNING makes damage of LVL over DURA round, decrements damage each round, can spread by 30 % ELECTRIFYING makes damage of LVL over DURA round, decrements damage each round, can spread by 30 % INCAPACITATED Affected Entity can not move for DURA WET can spread by 20 %","title":"List of Conditions"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Conditions/List/#list-of-conditions","text":"Name Description BURNING makes damage of LVL over DURA round, decrements damage each round, can spread by 30 % ELECTRIFYING makes damage of LVL over DURA round, decrements damage each round, can spread by 30 % INCAPACITATED Affected Entity can not move for DURA WET can spread by 20 %","title":"List of Conditions"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Flags/List/","text":"List of Flags Name Nr F_1_INTERACTABLE_TYPE 1 F_2_TILE_TYPE 2 F_4_PLAYER_TYPE 4 F_8_IS_WALL 8 F_9_IS_DOOR 9 F_12_LOOT_SOURCE_TYPE 12 F_13_ITEM_CONSUMABLE 13 F_3_ITEM 3 F_6_ACTOR_ATTRIBUTES 6 F_7_ACTOR_ATTRIBUTES_SPECIALTY 7 F_10_ACTOR_ATTRIBUTES_ROLES 10 F_11_ACTOR_ATTRIBUTES_RACE 11 F_14_NPC_TEMPLATE 14 F_5_KITPART_TYPE 5 F_15_KITPART_TYPE_BASE 15 F_16_KITPART_TYPE_MOD 16 F_17_KITPART_TYPE_APPENDIX 17 F_18_IS_CONDITION 18 F_19_ACTOR_CAN_NOT_MOVE 19 F_CHEAT_1_NO_CLIP 101","title":"List of Flags"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Flags/List/#list-of-flags","text":"Name Nr F_1_INTERACTABLE_TYPE 1 F_2_TILE_TYPE 2 F_4_PLAYER_TYPE 4 F_8_IS_WALL 8 F_9_IS_DOOR 9 F_12_LOOT_SOURCE_TYPE 12 F_13_ITEM_CONSUMABLE 13 F_3_ITEM 3 F_6_ACTOR_ATTRIBUTES 6 F_7_ACTOR_ATTRIBUTES_SPECIALTY 7 F_10_ACTOR_ATTRIBUTES_ROLES 10 F_11_ACTOR_ATTRIBUTES_RACE 11 F_14_NPC_TEMPLATE 14 F_5_KITPART_TYPE 5 F_15_KITPART_TYPE_BASE 15 F_16_KITPART_TYPE_MOD 16 F_17_KITPART_TYPE_APPENDIX 17 F_18_IS_CONDITION 18 F_19_ACTOR_CAN_NOT_MOVE 19 F_CHEAT_1_NO_CLIP 101","title":"List of Flags"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Properties/List/","text":"List of Properties Name Nr CONDUCTING 0 GROUNDED 1 SOAKING_WET 2 WET 3 DRY 4 BURNABLE 5 ENFLAMEABLE 6 BURNT_OUT 7","title":"List of Properties"},{"location":"CogsmosFramework/DemocrECS/Entity-Attributes/Properties/List/#list-of-properties","text":"Name Nr CONDUCTING 0 GROUNDED 1 SOAKING_WET 2 WET 3 DRY 4 BURNABLE 5 ENFLAMEABLE 6 BURNT_OUT 7","title":"List of Properties"},{"location":"CogsmosFramework/DemocrECS/System/Overview/","text":"WORK IN PROGRESS","title":"Overview"},{"location":"CogsmosFramework/DemocrECS/System/Overview/#work-in-progress","text":"","title":"WORK IN PROGRESS"},{"location":"CogsmosFramework/SokraTiles/Layering/","text":"","title":"Layering"},{"location":"CogsmosFramework/SokraTiles/Overview/","text":"Introduction This part of the Framework is responsible for parsing Tilemaps and Organicing it Managers of each Layer. Functions Gettign Layer Nodes you can use getLayerNode(layerEnum) to get each Layer of the Tilemap, we suggest to use its proxies for readabillity: Function Class it returns getPlayer() SokraTiles_Chunk_Player getActor() SokraTiles_Chunk_Actors getSelection() Sokratiles_Chunk_Selection getCondition() Sokratiles_Chunk_Condition getMeatInteract() SokraTiles_Chunk_Meat_Interactables getMeatFloor() SokraTiles_Chunk_Meat_Floor getMagicInteract() SokraTiles_Chunk_Matrix_Interactables getMagicFloor() SokraTiles_Chunk_Matrix_Floor getMatrixInteract() SokraTiles_Chunk_Magic_Interactables getMatrixFloor() SokraTiles_Chunk_Magic_Floor parseTileMap(filepath) 1st Parameter : Filepath to the in Tiled! designed Tilemap as String Returns : Void Make surue your Tilemap contains of Layers with its M-Type and Entity, like in the Template of /GameData/Tiled/TileMaps/Unique/Template.json Example: generateQUickStartChar() SokraTiles.parseTilemap(\"res://Config/experimental tilemap.json\") get_tree().change_scene(\"res://Src/scenes/Gameloop/PanicMode/PanicMode.tscn\") getCompValue(layerEnum,TileMapNode) 1st Parameter : enum of its corresponding Layer 2nd Parameter : Node of the Manager of the Layer Returns : Void Will be initialiced when Scene of Panic-mode enters the tree Example: func _ready(): .initialice(ENUM.SOKRATILES.LAYER.CONDITION) Signals.connect(\"Actor_Turn_Finished\",self,\"updateMap\")","title":"Overview"},{"location":"CogsmosFramework/SokraTiles/Overview/#introduction","text":"This part of the Framework is responsible for parsing Tilemaps and Organicing it Managers of each Layer.","title":"Introduction"},{"location":"CogsmosFramework/SokraTiles/Overview/#functions","text":"","title":"Functions"},{"location":"CogsmosFramework/SokraTiles/Overview/#gettign-layer-nodes","text":"you can use getLayerNode(layerEnum) to get each Layer of the Tilemap, we suggest to use its proxies for readabillity: Function Class it returns getPlayer() SokraTiles_Chunk_Player getActor() SokraTiles_Chunk_Actors getSelection() Sokratiles_Chunk_Selection getCondition() Sokratiles_Chunk_Condition getMeatInteract() SokraTiles_Chunk_Meat_Interactables getMeatFloor() SokraTiles_Chunk_Meat_Floor getMagicInteract() SokraTiles_Chunk_Matrix_Interactables getMagicFloor() SokraTiles_Chunk_Matrix_Floor getMatrixInteract() SokraTiles_Chunk_Magic_Interactables getMatrixFloor() SokraTiles_Chunk_Magic_Floor","title":"Gettign Layer Nodes"},{"location":"CogsmosFramework/SokraTiles/Overview/#parsetilemapfilepath","text":"1st Parameter : Filepath to the in Tiled! designed Tilemap as String Returns : Void Make surue your Tilemap contains of Layers with its M-Type and Entity, like in the Template of /GameData/Tiled/TileMaps/Unique/Template.json Example: generateQUickStartChar() SokraTiles.parseTilemap(\"res://Config/experimental tilemap.json\") get_tree().change_scene(\"res://Src/scenes/Gameloop/PanicMode/PanicMode.tscn\")","title":"parseTileMap(filepath)"},{"location":"CogsmosFramework/SokraTiles/Overview/#getcompvaluelayerenumtilemapnode","text":"1st Parameter : enum of its corresponding Layer 2nd Parameter : Node of the Manager of the Layer Returns : Void Will be initialiced when Scene of Panic-mode enters the tree Example: func _ready(): .initialice(ENUM.SOKRATILES.LAYER.CONDITION) Signals.connect(\"Actor_Turn_Finished\",self,\"updateMap\")","title":"getCompValue(layerEnum,TileMapNode)"},{"location":"Conventions/Enums/","text":"BASE_GAME_DATA_PATH res://GameData/GameElements/ STABLE_GAME_DATA res://GameData/GameElements//Stable COMMUNITY_GAME_DATA res://GameData/GameElements//Community PERSONAL_GAME_DATA res://GameData/GameElements//Personal MOUSE_INPUT_MODE ONLOOK LOOT TILE_PIXEL_SIZE 16 CENTER_TO_DRAW CENTER_TO_DRAW X: 32 Y: 31 DIRECTION_FOUR NORTH EAST SOUTH WEST ACTION_PHASE EFFECT_DONE PLAYER_DONE NPC_DONE TYPES_ON_MAP TILE ACTOR INTERACT MARKER PLAYER LOOT_SOURCE M_TYPE MEAT MAGIC MATRIX LAYER ACTOR PLAYER MEAT_GROUND MEAT_INTERACTABLE MATRIX_GROUND MATRIX_INTERACTABLE MAGIC_GROUND MAGIC_INTERACTABLE SELECTION CONDITION ENTROPY_TO_STRING Masterfully crafted Clockwork Tide up Manageable Mess Pigstall Chaotic Left for good Tipping point Spiraling out!! TRUE COSMIC VACUUM PROGRESS_COLOR 97a4c3 97a4c3 a7a7a7 a7a7a7 e7cd7b e7cd7b db6322 db6322 db2222 ff0e0e RARITY_TO_STRING Drek Worn out Do it yourself Wageslave Industrial Upper class Federal Fixer Elite runner Megacon prototype VALUE DREK WORN_OUT DO_IT_YOURSELF WAGESLAVE INDUSTRIAL UPPER_CLASS FEDERAL FIXER ELITE_RUNNER MEGACON_PROTOTYPE PEACES_TILL_NEW_SLOT 4 STATION_MODE ADD REMOVE CHANGE CAT_MATRIX HACK DRONE CYBERWARE CAT_MAGIC RITE SPELL INFUSION CAT_MEAT GUN MEELE ARMOR CATEGORY HACK DRONE CYBERWARE RITE SPELL INFUSION GUN MEELE ARMOR PARTS BASE MOD APPENDIX ROOMS_FOR_TRAIT_NEEDED 3 MAX_TEAM_SIZE 4 ATTRIBUTE AGILLITY CONSTITUTION STRENGTH REACTION LOGIC INTUITION WILLPOWER CHARISMA SKILL CRAFTING PHYLOSOPHIZING CONCEPTUALICING PERCEVING ASSENSING DEBUGGING ENDURING COPING FILTERING SNEAKING REPRESSING SILENCING PLAYER_STATE STANDING SELECTING NEEDING_DIRECTION SELECTING_DIRECTION INVALID FINISHED INPUT_MODE MOUSE KEY INTERFACE CNTL DELETE ESCAPE ENTER LEFT_CLICK RIGHT_CLICK MOVEMENT NORTH EAST SOUTH WEST ACTION SELECT INTERACT PARCTISE ONLOOK LOOT USE INFO JURNAL MONITOR NEWS KITS CLI SCREEN_TYPE STATION SELF SPECIAL INPUT_MODE MOUSE KEY STATION WORKSHOP TERMINAL RETREAT SPECIAL PANIC SELF INVENTORY CHAR ROOTNET EXCEPTIONAL_PARSER DEFAULT AND FLAG HAS_COMP COMPARE_COMP PERMANENT_CHANGE VALUE_DEPTH UPPER MIDDLE LOWER CONNECTOR CONDITION VALUE GUI_SUB_SCENES EQUIPED_KIT_SET INVENTORY KIT_PART_BROWSER KIT_SET_MODDER KIT_SET_TO_STRING REST_HUD CHEAT_CLI EVENT_TO_STRING KITS_AT_START res://config/KitsAtStart.json SUB_TITLES res://Config/DynamicSubtitles.json SAVE_STATE res://Config/SaveState TILE_SETS res://GameData/Tiled/TileSets/JSON SCENES TITLE REST PANIC ALECANDRIA","title":"Enums"},{"location":"Conventions/Enums/#base_game_data_path","text":"res://GameData/GameElements/","title":"BASE_GAME_DATA_PATH"},{"location":"Conventions/Enums/#stable_game_data","text":"res://GameData/GameElements//Stable","title":"STABLE_GAME_DATA"},{"location":"Conventions/Enums/#community_game_data","text":"res://GameData/GameElements//Community","title":"COMMUNITY_GAME_DATA"},{"location":"Conventions/Enums/#personal_game_data","text":"res://GameData/GameElements//Personal","title":"PERSONAL_GAME_DATA"},{"location":"Conventions/Enums/#mouse_input_mode","text":"ONLOOK LOOT","title":"MOUSE_INPUT_MODE"},{"location":"Conventions/Enums/#tile_pixel_size","text":"16","title":"TILE_PIXEL_SIZE"},{"location":"Conventions/Enums/#center_to_draw","text":"","title":"CENTER_TO_DRAW"},{"location":"Conventions/Enums/#center_to_draw_1","text":"X: 32 Y: 31","title":"CENTER_TO_DRAW"},{"location":"Conventions/Enums/#direction_four","text":"NORTH EAST SOUTH WEST","title":"DIRECTION_FOUR"},{"location":"Conventions/Enums/#action_phase","text":"EFFECT_DONE PLAYER_DONE NPC_DONE","title":"ACTION_PHASE"},{"location":"Conventions/Enums/#types_on_map","text":"TILE ACTOR INTERACT MARKER PLAYER LOOT_SOURCE","title":"TYPES_ON_MAP"},{"location":"Conventions/Enums/#m_type","text":"MEAT MAGIC MATRIX","title":"M_TYPE"},{"location":"Conventions/Enums/#layer","text":"ACTOR PLAYER MEAT_GROUND MEAT_INTERACTABLE MATRIX_GROUND MATRIX_INTERACTABLE MAGIC_GROUND MAGIC_INTERACTABLE SELECTION CONDITION","title":"LAYER"},{"location":"Conventions/Enums/#entropy_to_string","text":"Masterfully crafted Clockwork Tide up Manageable Mess Pigstall Chaotic Left for good Tipping point Spiraling out!! TRUE COSMIC VACUUM","title":"ENTROPY_TO_STRING"},{"location":"Conventions/Enums/#progress_color","text":"","title":"PROGRESS_COLOR"},{"location":"Conventions/Enums/#97a4c3","text":"","title":"97a4c3"},{"location":"Conventions/Enums/#97a4c3_1","text":"","title":"97a4c3"},{"location":"Conventions/Enums/#a7a7a7","text":"","title":"a7a7a7"},{"location":"Conventions/Enums/#a7a7a7_1","text":"","title":"a7a7a7"},{"location":"Conventions/Enums/#e7cd7b","text":"","title":"e7cd7b"},{"location":"Conventions/Enums/#e7cd7b_1","text":"","title":"e7cd7b"},{"location":"Conventions/Enums/#db6322","text":"","title":"db6322"},{"location":"Conventions/Enums/#db6322_1","text":"","title":"db6322"},{"location":"Conventions/Enums/#db2222","text":"","title":"db2222"},{"location":"Conventions/Enums/#ff0e0e","text":"","title":"ff0e0e"},{"location":"Conventions/Enums/#rarity_to_string","text":"Drek Worn out Do it yourself Wageslave Industrial Upper class Federal Fixer Elite runner Megacon prototype","title":"RARITY_TO_STRING"},{"location":"Conventions/Enums/#value","text":"DREK WORN_OUT DO_IT_YOURSELF WAGESLAVE INDUSTRIAL UPPER_CLASS FEDERAL FIXER ELITE_RUNNER MEGACON_PROTOTYPE","title":"VALUE"},{"location":"Conventions/Enums/#peaces_till_new_slot","text":"4","title":"PEACES_TILL_NEW_SLOT"},{"location":"Conventions/Enums/#station_mode","text":"ADD REMOVE CHANGE","title":"STATION_MODE"},{"location":"Conventions/Enums/#cat_matrix","text":"HACK DRONE CYBERWARE","title":"CAT_MATRIX"},{"location":"Conventions/Enums/#cat_magic","text":"RITE SPELL INFUSION","title":"CAT_MAGIC"},{"location":"Conventions/Enums/#cat_meat","text":"GUN MEELE ARMOR","title":"CAT_MEAT"},{"location":"Conventions/Enums/#category","text":"HACK DRONE CYBERWARE RITE SPELL INFUSION GUN MEELE ARMOR","title":"CATEGORY"},{"location":"Conventions/Enums/#parts","text":"BASE MOD APPENDIX","title":"PARTS"},{"location":"Conventions/Enums/#rooms_for_trait_needed","text":"3","title":"ROOMS_FOR_TRAIT_NEEDED"},{"location":"Conventions/Enums/#max_team_size","text":"4","title":"MAX_TEAM_SIZE"},{"location":"Conventions/Enums/#attribute","text":"AGILLITY CONSTITUTION STRENGTH REACTION LOGIC INTUITION WILLPOWER CHARISMA","title":"ATTRIBUTE"},{"location":"Conventions/Enums/#skill","text":"CRAFTING PHYLOSOPHIZING CONCEPTUALICING PERCEVING ASSENSING DEBUGGING ENDURING COPING FILTERING SNEAKING REPRESSING SILENCING","title":"SKILL"},{"location":"Conventions/Enums/#player_state","text":"STANDING SELECTING NEEDING_DIRECTION SELECTING_DIRECTION INVALID FINISHED","title":"PLAYER_STATE"},{"location":"Conventions/Enums/#input_mode","text":"MOUSE KEY","title":"INPUT_MODE"},{"location":"Conventions/Enums/#interface","text":"CNTL DELETE ESCAPE ENTER LEFT_CLICK RIGHT_CLICK","title":"INTERFACE"},{"location":"Conventions/Enums/#movement","text":"NORTH EAST SOUTH WEST","title":"MOVEMENT"},{"location":"Conventions/Enums/#action","text":"SELECT INTERACT PARCTISE ONLOOK LOOT USE","title":"ACTION"},{"location":"Conventions/Enums/#info","text":"JURNAL MONITOR NEWS KITS CLI","title":"INFO"},{"location":"Conventions/Enums/#screen_type","text":"STATION SELF SPECIAL","title":"SCREEN_TYPE"},{"location":"Conventions/Enums/#input_mode_1","text":"MOUSE KEY","title":"INPUT_MODE"},{"location":"Conventions/Enums/#station","text":"WORKSHOP TERMINAL RETREAT","title":"STATION"},{"location":"Conventions/Enums/#special","text":"PANIC","title":"SPECIAL"},{"location":"Conventions/Enums/#self","text":"INVENTORY CHAR ROOTNET","title":"SELF"},{"location":"Conventions/Enums/#exceptional_parser","text":"DEFAULT AND FLAG HAS_COMP COMPARE_COMP PERMANENT_CHANGE","title":"EXCEPTIONAL_PARSER"},{"location":"Conventions/Enums/#value_depth","text":"UPPER MIDDLE LOWER CONNECTOR CONDITION VALUE","title":"VALUE_DEPTH"},{"location":"Conventions/Enums/#gui_sub_scenes","text":"EQUIPED_KIT_SET INVENTORY KIT_PART_BROWSER KIT_SET_MODDER KIT_SET_TO_STRING REST_HUD CHEAT_CLI EVENT_TO_STRING","title":"GUI_SUB_SCENES"},{"location":"Conventions/Enums/#kits_at_start","text":"res://config/KitsAtStart.json","title":"KITS_AT_START"},{"location":"Conventions/Enums/#sub_titles","text":"res://Config/DynamicSubtitles.json","title":"SUB_TITLES"},{"location":"Conventions/Enums/#save_state","text":"res://Config/SaveState","title":"SAVE_STATE"},{"location":"Conventions/Enums/#tile_sets","text":"res://GameData/Tiled/TileSets/JSON","title":"TILE_SETS"},{"location":"Conventions/Enums/#scenes","text":"TITLE REST PANIC ALECANDRIA","title":"SCENES"},{"location":"Conventions/ModuleStructure/","text":"Modules My Project structure follows an Systemic design pilosophy, its goal is toappend new themes of Features as an Module-folder,which acts like a Blackbox. The only Accespoint is their SIngleton API which saniticies, validates or logs if neccessary. Here are the conversioned Namespaces and their Usage: |Namespace | Usage | |----------------------------|----------------------------------------------------------------------------------| |Controller | Folder for foreign related Classes | | > API | proxy functions with Saniticer,Validator and/or Logger | | > Logger | Used ingame Eventlog and Entropy counter | | Entity Manager | Folder with Classes for instanciating,freeing,changing Entities | | IO | Folder With InputClass which connects Signals to API and OutputClass which emits | | System | all kinds of blackbooxed Logical Computation | | Unit Test | Classes for Unit Testing |","title":"ModuleStructure"},{"location":"Conventions/ModuleStructure/#modules","text":"My Project structure follows an Systemic design pilosophy, its goal is toappend new themes of Features as an Module-folder,which acts like a Blackbox. The only Accespoint is their SIngleton API which saniticies, validates or logs if neccessary. Here are the conversioned Namespaces and their Usage: |Namespace | Usage | |----------------------------|----------------------------------------------------------------------------------| |Controller | Folder for foreign related Classes | | > API | proxy functions with Saniticer,Validator and/or Logger | | > Logger | Used ingame Eventlog and Entropy counter | | Entity Manager | Folder with Classes for instanciating,freeing,changing Entities | | IO | Folder With InputClass which connects Signals to API and OutputClass which emits | | System | all kinds of blackbooxed Logical Computation | | Unit Test | Classes for Unit Testing |","title":"Modules"},{"location":"Conventions/Namings/","text":"List of Namings Naming Description Panic First Half of the Gameplay: Search the Green Circle and enter to Rest by walking over it Rest Second Half of the Gameplay: Use your in Panic collected things to improve and customice your Runner Runner Playable Character Team Group of Runner Space Type of percieved Layer in Shadowrun (cureently just Meat-space) Meat Meele, Gun, Armor, most sourroundings like Houses and Sidewalks Virtual Cyberware, Hack, Drone, electronical devices and Augmented Reallity Astral Infusion, Spell, Rite, other magical meta-humans and lovecraftian horrors Core Most defining Part of your Kitset, determinds percieved Layer, Lore and Usage Upgrade Specialication of KitSets, tinkers its Usage to more specific situations and Synergies Auxillary Small overaching Bonuses, WIP KitSet connected parts of at least a Core-part, ready to be used in Chunks Grid Matrix/WWW WIP Host Station to tinker your Cyberware, Hacks and Drones Workshop Station to tinker your Meele, Guns and Armor Retreat Station to tinker your Infusions, Spells and Rites Tile Most basic element of your Sourroundings, different Type of Floor/Ground Interactable More introcate but still passive things like Automatatons, Walls or Doors Actor Sophisticated beings with their own will and Goals, often but not neccessarily meta-humans State of Mind Current Level of Panic, increased by count of manipulated Data in the Chunk. The Higher, the more overreactive will your Chunk become, but its loot will be improved. resets after entering PanicRoom Psychosis Highes Level of Panic, significant impvorvement of Loot, WIP Mind Restored Stay Resilient Lec Linked Entity Composition Module Pluggable Code of a Game-System API Functions of Game-System for public usages Cogsmos Framework of the most Basic Game-elements (DemocrECS,SokraTiles,ALECandria,DavINCi,ArisProcGenes) Race determining the max and min of Attributes and the status of the meta-human in the Society Role Archetype of Generall Skills and Abillities Specialty eccentric and weird Hobbies and quirks of Actor Entity A Being,declared by its collection of Entity-Attributes Entity-Attribute different types of data, giving an Entity meaning (Components instanced Variables, Flags for marking and Identifying specific traits, Properties-enums descirbing its reactivity in the Sandbox, Template Flyweight pattern for quick references) Effect Condition A over multiple rounds affecting Event,sticked to an Entity Unique Statmod Collection of static written codeblocks manipulating Entities, instantanious taking affect ActorSpawnTable Defining different kinds of Spawning an Actor. very Similar to Common LootTables Shape Describing the Form in which the Kit will Select and Consider Entities for Manipulation Sector Upper Namespace of Lec: Meta for creator-info, MAIN for instanciated Values, REFERENCES for Templates and Flyweight Patterns (WIP) Package separating collection fo Values to get Instanciated, diffrent Packages will be parsed at different Times and their name are case and context-sensitive!! Concept Collection of functions a Event can do, like Considering targets or Performing its manipulation Keyword Keywords of Function in Concept, every following Word in Inline and Context-sensitive Value First and Most important Vlaue the Function needs to perform as a Parameter Operand Connectors like AND or Operators like EQUALLS, SET, LESS Modificator Value to Compare or set KitSlot One of your ten merged set of Parts, ready to be used in a Chunks (needs at least Core) Personal Content Unstable and not officially supported Game-elements made with ALECandria of the Player Communtiy Content Unstable and not officially supported Game-elements made with ALECandria Shared by other Players","title":"Namings"},{"location":"Conventions/Namings/#list-of-namings","text":"Naming Description Panic First Half of the Gameplay: Search the Green Circle and enter to Rest by walking over it Rest Second Half of the Gameplay: Use your in Panic collected things to improve and customice your Runner Runner Playable Character Team Group of Runner Space Type of percieved Layer in Shadowrun (cureently just Meat-space) Meat Meele, Gun, Armor, most sourroundings like Houses and Sidewalks Virtual Cyberware, Hack, Drone, electronical devices and Augmented Reallity Astral Infusion, Spell, Rite, other magical meta-humans and lovecraftian horrors Core Most defining Part of your Kitset, determinds percieved Layer, Lore and Usage Upgrade Specialication of KitSets, tinkers its Usage to more specific situations and Synergies Auxillary Small overaching Bonuses, WIP KitSet connected parts of at least a Core-part, ready to be used in Chunks Grid Matrix/WWW WIP Host Station to tinker your Cyberware, Hacks and Drones Workshop Station to tinker your Meele, Guns and Armor Retreat Station to tinker your Infusions, Spells and Rites Tile Most basic element of your Sourroundings, different Type of Floor/Ground Interactable More introcate but still passive things like Automatatons, Walls or Doors Actor Sophisticated beings with their own will and Goals, often but not neccessarily meta-humans State of Mind Current Level of Panic, increased by count of manipulated Data in the Chunk. The Higher, the more overreactive will your Chunk become, but its loot will be improved. resets after entering PanicRoom Psychosis Highes Level of Panic, significant impvorvement of Loot, WIP Mind Restored Stay Resilient Lec Linked Entity Composition Module Pluggable Code of a Game-System API Functions of Game-System for public usages Cogsmos Framework of the most Basic Game-elements (DemocrECS,SokraTiles,ALECandria,DavINCi,ArisProcGenes) Race determining the max and min of Attributes and the status of the meta-human in the Society Role Archetype of Generall Skills and Abillities Specialty eccentric and weird Hobbies and quirks of Actor Entity A Being,declared by its collection of Entity-Attributes Entity-Attribute different types of data, giving an Entity meaning (Components instanced Variables, Flags for marking and Identifying specific traits, Properties-enums descirbing its reactivity in the Sandbox, Template Flyweight pattern for quick references) Effect Condition A over multiple rounds affecting Event,sticked to an Entity Unique Statmod Collection of static written codeblocks manipulating Entities, instantanious taking affect ActorSpawnTable Defining different kinds of Spawning an Actor. very Similar to Common LootTables Shape Describing the Form in which the Kit will Select and Consider Entities for Manipulation Sector Upper Namespace of Lec: Meta for creator-info, MAIN for instanciated Values, REFERENCES for Templates and Flyweight Patterns (WIP) Package separating collection fo Values to get Instanciated, diffrent Packages will be parsed at different Times and their name are case and context-sensitive!! Concept Collection of functions a Event can do, like Considering targets or Performing its manipulation Keyword Keywords of Function in Concept, every following Word in Inline and Context-sensitive Value First and Most important Vlaue the Function needs to perform as a Parameter Operand Connectors like AND or Operators like EQUALLS, SET, LESS Modificator Value to Compare or set KitSlot One of your ten merged set of Parts, ready to be used in a Chunks (needs at least Core) Personal Content Unstable and not officially supported Game-elements made with ALECandria of the Player Communtiy Content Unstable and not officially supported Game-elements made with ALECandria Shared by other Players","title":"List of Namings"},{"location":"Conventions/Styling/","text":"Introduction Our Code may be from a professionell buissness point of view lengthy, spacy, too much or even useless commenting and unconventional. We are aware of Conventions like PEP 8 or CCG. Buit there are good reasons why we dont use them: 1. Experimental Design : We often try new Ideas and patterns just for the fun and learning of it, see fast-prototyping. 2. Interdisciplinary : PatnicRoom is set together by 5 different Repos with different script-languages. 3. Its open ended : There is no Definition of Done for our Project. With each new update, a intuitive Navigation becomes more beneficial. 4. We are Hobbyist : Everything is free of charge, therefore we sometimes have to compromise between our limited time and ressources and best practices. General We are using GD-Script , even though Godot support C#. no need to sweat, its quite beginnerfriendly and on its surface similar to Python . (Note: we may use C# for perfomance-heavy things in the Future) Example for Sub-System Context: Parsing a multi-leveled TileMap(100x100) with multiple percievable layers, converting the Map-specific UID into instanciated Counterparts. extends Object class_name _SokraTiles_TileMapParser static func parseTileMap(filepathToMap:String) -> Dictionary: #>>> Sanitication <<<# var mapMetaData = _getRelevantMetaData(filepathToMap) var parsedMap : Array #>>> Itterating each Layer each Heights <<<# for heightLevel in mapMetaData.levels: var parsedLevel : Dictionary for currentPerception in heightLevel.keys(): var content = heightLevel.currentPerception #>>> Formatting of Layer by Context <<< var formatedPerception: Dictionary if \"PLAYER\" in currentPerception : formatedPerception = _findPlayer(content) elif \"INTERACT\" in currentPerception : formatedPerception = _categoriceInteracts(content) elif !currentLayer.empty() : formatedPerception = _parseDefaultLayer(mapMetaData,content) #>>> Validating <<<# if !formatedPerception.empty(): parsedLevel[currentPerception] = formatedPerception else: printerr(\"!!ERROR!! at Parsing Tilemap in \"+filepathToMap+\" at Layer \"+currentPerception) parsedMap.append(parsedLevel) return parsedMap static func _getRelevantMetaData(tiledImport:String) -> Dictionary: var tiledImport = Util.JSONParser.fileToDictionary(filepathToMap) var mapMetaData : Dictionary mapMetaData[\"size\"] = Vector2(tiledImport.height, tiledImport.width) mapMetaData[\"levels\"] = getLayersOfLevel(tiledImport.layers) mapMetaData[\"tileNrs\"] = tiledImport.tilesets.size() return mapMetaData Example for API Context: Simple Class to collect and return a Template of each TileEntity in the Game. extends Object class_name DemokrECTS_Atlas var _entryComponentRef : Dictionary # VAR [entry.indexComponent.value] : [Array of all Comp.name] var _EntriesOfAtlas : Dictionary # VAR [indexComponent.value] : [Instance of Entity] var _classOfEntries # VAR needs typing by SubAtlas (I.E. TileEntity) # ----- GETTER --------------------------------------------------------------- ## # FUNC returns ALL, use getEntry() for specific # FUNC Dict uses [indexComponent] : [Instance of Entity] func getEntries() -> Dictionary: return _EntriesOfAtlas # FUNC index is value of C_12_ATLAS_INDEX # FUNC return is type-casted as Entity func getEntry(index:String) -> Entity: return _EntriesOfAtlas[index] as Entity # FUNC searchedTerm is dynamic typed func getEntriesWithCompValue(searchedTerm,compname:String) -> Array: var validEnts : Array for entry in getEntriesWithComp(compname): if entry.getCompValue(compname) == searchedTerm : validEnts.append(entry) return validEnts # ----- SETTER --------------------------------------------------------------- ## func addEntity(ent,compIndex=\"C_12_ATLAS_INDEX\"): if ent is _classOfEntries: if !_EntriesOfAtlas.has(ent): var index = ent.getCompValue(compIndex) _EntriesOfAtlas[index] = ent _entryComponentRef[index] = ent.components.keys() else: printerr(\"Error in Atlas_TileEntity! [\"+str(ent.name())+\"] already exists\") else: printerr(\"Error in Atlas_TileEntity! [\"+(ent.name())+\"] could not be added\") Further Reading Typing We use as much Static Typing as possible. Duck-typing We are using ducktyped functions as workaround for Interfaces. We mark them By ending them with _quack() unfortunately Godot does not support abstract classes Capitalication Variables have CamelCase NodeNames have PascalCase Classes have NameOfApiInPascal_SubsystemInPascal Enums have SCREAM_CASE Conventionsaliced Lists of Classes have SCREAM_CASE (I.E Components) Encapsulation local functions and variables begin with an underscore ( _ ). Godot does not support private, hence this workaround. Node-References We recommend to use onready and static typing if possible and to reference it via absolute path, I.E : onready var nameOfNode : Panel = get_node(\"/root/MainMenue/Selection/Backgorund\") If you want to Itterate through your Nodes (I.E Inventories) we recommend to put them into a VBoxContainer and naming them after numbers counting upwards","title":"Styling"},{"location":"Conventions/Styling/#introduction","text":"Our Code may be from a professionell buissness point of view lengthy, spacy, too much or even useless commenting and unconventional. We are aware of Conventions like PEP 8 or CCG. Buit there are good reasons why we dont use them: 1. Experimental Design : We often try new Ideas and patterns just for the fun and learning of it, see fast-prototyping. 2. Interdisciplinary : PatnicRoom is set together by 5 different Repos with different script-languages. 3. Its open ended : There is no Definition of Done for our Project. With each new update, a intuitive Navigation becomes more beneficial. 4. We are Hobbyist : Everything is free of charge, therefore we sometimes have to compromise between our limited time and ressources and best practices.","title":"Introduction"},{"location":"Conventions/Styling/#general","text":"We are using GD-Script , even though Godot support C#. no need to sweat, its quite beginnerfriendly and on its surface similar to Python . (Note: we may use C# for perfomance-heavy things in the Future)","title":"General"},{"location":"Conventions/Styling/#example-for-sub-system","text":"Context: Parsing a multi-leveled TileMap(100x100) with multiple percievable layers, converting the Map-specific UID into instanciated Counterparts. extends Object class_name _SokraTiles_TileMapParser static func parseTileMap(filepathToMap:String) -> Dictionary: #>>> Sanitication <<<# var mapMetaData = _getRelevantMetaData(filepathToMap) var parsedMap : Array #>>> Itterating each Layer each Heights <<<# for heightLevel in mapMetaData.levels: var parsedLevel : Dictionary for currentPerception in heightLevel.keys(): var content = heightLevel.currentPerception #>>> Formatting of Layer by Context <<< var formatedPerception: Dictionary if \"PLAYER\" in currentPerception : formatedPerception = _findPlayer(content) elif \"INTERACT\" in currentPerception : formatedPerception = _categoriceInteracts(content) elif !currentLayer.empty() : formatedPerception = _parseDefaultLayer(mapMetaData,content) #>>> Validating <<<# if !formatedPerception.empty(): parsedLevel[currentPerception] = formatedPerception else: printerr(\"!!ERROR!! at Parsing Tilemap in \"+filepathToMap+\" at Layer \"+currentPerception) parsedMap.append(parsedLevel) return parsedMap static func _getRelevantMetaData(tiledImport:String) -> Dictionary: var tiledImport = Util.JSONParser.fileToDictionary(filepathToMap) var mapMetaData : Dictionary mapMetaData[\"size\"] = Vector2(tiledImport.height, tiledImport.width) mapMetaData[\"levels\"] = getLayersOfLevel(tiledImport.layers) mapMetaData[\"tileNrs\"] = tiledImport.tilesets.size() return mapMetaData","title":"Example for Sub-System"},{"location":"Conventions/Styling/#example-for-api","text":"Context: Simple Class to collect and return a Template of each TileEntity in the Game. extends Object class_name DemokrECTS_Atlas var _entryComponentRef : Dictionary # VAR [entry.indexComponent.value] : [Array of all Comp.name] var _EntriesOfAtlas : Dictionary # VAR [indexComponent.value] : [Instance of Entity] var _classOfEntries # VAR needs typing by SubAtlas (I.E. TileEntity) # ----- GETTER --------------------------------------------------------------- ## # FUNC returns ALL, use getEntry() for specific # FUNC Dict uses [indexComponent] : [Instance of Entity] func getEntries() -> Dictionary: return _EntriesOfAtlas # FUNC index is value of C_12_ATLAS_INDEX # FUNC return is type-casted as Entity func getEntry(index:String) -> Entity: return _EntriesOfAtlas[index] as Entity # FUNC searchedTerm is dynamic typed func getEntriesWithCompValue(searchedTerm,compname:String) -> Array: var validEnts : Array for entry in getEntriesWithComp(compname): if entry.getCompValue(compname) == searchedTerm : validEnts.append(entry) return validEnts # ----- SETTER --------------------------------------------------------------- ## func addEntity(ent,compIndex=\"C_12_ATLAS_INDEX\"): if ent is _classOfEntries: if !_EntriesOfAtlas.has(ent): var index = ent.getCompValue(compIndex) _EntriesOfAtlas[index] = ent _entryComponentRef[index] = ent.components.keys() else: printerr(\"Error in Atlas_TileEntity! [\"+str(ent.name())+\"] already exists\") else: printerr(\"Error in Atlas_TileEntity! [\"+(ent.name())+\"] could not be added\")","title":"Example for API"},{"location":"Conventions/Styling/#further-reading","text":"","title":"Further Reading"},{"location":"Conventions/Styling/#typing","text":"We use as much Static Typing as possible.","title":"Typing"},{"location":"Conventions/Styling/#duck-typing","text":"We are using ducktyped functions as workaround for Interfaces. We mark them By ending them with _quack() unfortunately Godot does not support abstract classes","title":"Duck-typing"},{"location":"Conventions/Styling/#capitalication","text":"Variables have CamelCase NodeNames have PascalCase Classes have NameOfApiInPascal_SubsystemInPascal Enums have SCREAM_CASE Conventionsaliced Lists of Classes have SCREAM_CASE (I.E Components)","title":"Capitalication"},{"location":"Conventions/Styling/#encapsulation","text":"local functions and variables begin with an underscore ( _ ). Godot does not support private, hence this workaround.","title":"Encapsulation"},{"location":"Conventions/Styling/#node-references","text":"We recommend to use onready and static typing if possible and to reference it via absolute path, I.E : onready var nameOfNode : Panel = get_node(\"/root/MainMenue/Selection/Backgorund\") If you want to Itterate through your Nodes (I.E Inventories) we recommend to put them into a VBoxContainer and naming them after numbers counting upwards","title":"Node-References"},{"location":"GettingStarted/Navigating/","text":"Introduction The Size of this Project may be a little daunting at first glance. Thats why we strongly recommend our VS-Code Setup as a starting point for further Personalication. Comment-anchors Explorer Comment anchors are very Usefull for Finding marked Files ver Fast. there are three Types of Marker: 1. Doc-Links can open you the Documentation in HTML or Markdown Format and are at the very Top of Files. 2. epic Bookmarks open the File they are in, you can find a categoriced list of them by clicking the Anchor on the Sidebar. 3. contextual Todos are used as temporarilly Bookmarked Changes and Errors. you can use # BUG , # STUB , # REFACTOR and # REVIEW Files Bookmarks can also be used to improve Navigation in a File itself. For a Good example, take a look on the Entity-class, you can find it by its Bookmark ;) Typical uses are: for grouping similar functions use: # ----- EXAMPLE ---------------------------------------------------------------- ## for grouping lines in a big or not atomiced function into their stages use #>>> Name Of Stage <<<# for additional info while mousehovering a functioncall, write above # FUNC > important info I.E about parameter for additional info about a Variable, write above # VAR > important info I.E valid Keys of a Dictionary","title":"Introduction"},{"location":"GettingStarted/Navigating/#introduction","text":"The Size of this Project may be a little daunting at first glance. Thats why we strongly recommend our VS-Code Setup as a starting point for further Personalication.","title":"Introduction"},{"location":"GettingStarted/Navigating/#comment-anchors","text":"","title":"Comment-anchors"},{"location":"GettingStarted/Navigating/#explorer","text":"Comment anchors are very Usefull for Finding marked Files ver Fast. there are three Types of Marker: 1. Doc-Links can open you the Documentation in HTML or Markdown Format and are at the very Top of Files. 2. epic Bookmarks open the File they are in, you can find a categoriced list of them by clicking the Anchor on the Sidebar. 3. contextual Todos are used as temporarilly Bookmarked Changes and Errors. you can use # BUG , # STUB , # REFACTOR and # REVIEW","title":"Explorer"},{"location":"GettingStarted/Navigating/#files","text":"Bookmarks can also be used to improve Navigation in a File itself. For a Good example, take a look on the Entity-class, you can find it by its Bookmark ;) Typical uses are: for grouping similar functions use: # ----- EXAMPLE ---------------------------------------------------------------- ## for grouping lines in a big or not atomiced function into their stages use #>>> Name Of Stage <<<# for additional info while mousehovering a functioncall, write above # FUNC > important info I.E about parameter for additional info about a Variable, write above # VAR > important info I.E valid Keys of a Dictionary","title":"Files"},{"location":"GettingStarted/Snippets/CLI-Class/","text":"CLI Class JSON \"CLI_COMMAND\": { \"prefix\" : [\"SN: 009 CLI command\"], \"description\" : \"Write a new Command for 009-CLI.\\nacces it in Panic-mode by pressing F3 and running its function\\n\\n ----------------------------------------------------------\\n| IMPORTANT! |\\n| DONT FORGET, TO ENTER IT IN 009-CLI/Controler/Syntax.gd |\\n ----------------------------------------------------------\\n\", \"body\": [ \"extends Node\", \"class_name _API_017_Cmd_${1:UsePascalCaseHere}\", \"\", \"\", \"\", \"static func run(parameter:Array) -> void:\", \" ${0: vvvvv write your logic here vvvvv}\", \"\", \"\", \"\" ] } GDS extends Node class_name ________ static func run(parameter:Array) -> void: ________________________________ ________________________________ ________________________________ }","title":"CLI Class"},{"location":"GettingStarted/Snippets/CLI-Class/#cli-class","text":"","title":"CLI Class"},{"location":"GettingStarted/Snippets/CLI-Class/#json","text":"\"CLI_COMMAND\": { \"prefix\" : [\"SN: 009 CLI command\"], \"description\" : \"Write a new Command for 009-CLI.\\nacces it in Panic-mode by pressing F3 and running its function\\n\\n ----------------------------------------------------------\\n| IMPORTANT! |\\n| DONT FORGET, TO ENTER IT IN 009-CLI/Controler/Syntax.gd |\\n ----------------------------------------------------------\\n\", \"body\": [ \"extends Node\", \"class_name _API_017_Cmd_${1:UsePascalCaseHere}\", \"\", \"\", \"\", \"static func run(parameter:Array) -> void:\", \" ${0: vvvvv write your logic here vvvvv}\", \"\", \"\", \"\" ] }","title":"JSON"},{"location":"GettingStarted/Snippets/CLI-Class/#gds","text":"extends Node class_name ________ static func run(parameter:Array) -> void: ________________________________ ________________________________ ________________________________ }","title":"GDS"},{"location":"GettingStarted/Snippets/CLI-Dict-Entry/","text":"CLI MetaData JSON \"CLI_SYNTAX\": { \"prefix\" : [\"SN: 009 CLI dict entry\"], \"description\" : \"Add the neccessary Meta-data to the Command-dictionary to make it usable\", \"body\": [ \" \\\"${1:name_of_command}\\\" : {\", \" \\\"passive\\\" : ${2:boolean # describes if it needs to be turned off again}\", \" ,\\\"parameter\\\" : [${3: # describes if it needs to be turned off again}]\", \" ,\\\"toString\\\" : ${4:String # will be shown in overview}\", \" ,\\\"class\\\" : _API_017_Cmd_${5:ClassOfCommand # Your class-name of the other snippet }\", \" ,\\\"list\\\" : [${0:Array(s) # insert here references vor suggested Parameter}] \", \" ,\\\"input\\\" : \\\"${1/(.*)/${1}/g}\\\"\", \" },\" ] } GDS \"name_of_command\" : { \"passive\" : ________ ,\"parameter\" : [ ________, ________ ] ,\"toString\" : ________ ,\"class\" : ________ ,\"list\" : [ ________, ________ ] ,\"input\" : ________ },","title":"CLI MetaData"},{"location":"GettingStarted/Snippets/CLI-Dict-Entry/#cli-metadata","text":"","title":"CLI MetaData"},{"location":"GettingStarted/Snippets/CLI-Dict-Entry/#json","text":"\"CLI_SYNTAX\": { \"prefix\" : [\"SN: 009 CLI dict entry\"], \"description\" : \"Add the neccessary Meta-data to the Command-dictionary to make it usable\", \"body\": [ \" \\\"${1:name_of_command}\\\" : {\", \" \\\"passive\\\" : ${2:boolean # describes if it needs to be turned off again}\", \" ,\\\"parameter\\\" : [${3: # describes if it needs to be turned off again}]\", \" ,\\\"toString\\\" : ${4:String # will be shown in overview}\", \" ,\\\"class\\\" : _API_017_Cmd_${5:ClassOfCommand # Your class-name of the other snippet }\", \" ,\\\"list\\\" : [${0:Array(s) # insert here references vor suggested Parameter}] \", \" ,\\\"input\\\" : \\\"${1/(.*)/${1}/g}\\\"\", \" },\" ] }","title":"JSON"},{"location":"GettingStarted/Snippets/CLI-Dict-Entry/#gds","text":"\"name_of_command\" : { \"passive\" : ________ ,\"parameter\" : [ ________, ________ ] ,\"toString\" : ________ ,\"class\" : ________ ,\"list\" : [ ________, ________ ] ,\"input\" : ________ },","title":"GDS"},{"location":"GettingStarted/Snippets/Component/","text":"Component JSON \"COMPONENT\": { \"prefix\" : [\"SN: Component\"], \"description\" : \"Declare a new child of Component to describe a attribute of a Game-element\\n\", \"body\": [ \"extends Component\", \"class_name C_${TM_FILENAME_BASE/[C]//g}_${1/(.*)/${1:/upcase}/g}\", // {use_file_name ; select_C ; insert_blank} {input_field_1 : called_name} \"\", \"var value: ${2:static_typing_preffered}\", // {input_field_2 : called_static_typing_preffered} \"\", \"func _init(valuePara:${2/(.*)/${1}/g}) -> void :\", // {use_input_field_2 ; select_all ; insert_all} \" self.name = \\\"C_${TM_FILENAME_BASE/[C]//g}_${1/(.*)/${1:/upcase}/g}\\\"\", // {use_file_name ; select_C ; insert_blank} {use_input_field_1 ; select_all ; write_upper_case} \" value = valuePara\", \"\", \"\", \" \", \"\", \"static func getType_quack() -> String : return \\\"${2/(.*)/${1:/upcase}/g}\\\"\", // {use_second_input ; select_all ; writer_upper_case} \"\", \"\", \"static func getAutoDoc() -> Dictionary : \", \" return{\", \" \\\"suggestion\\\" : \\\"${3:write_one_sentence_here}\\\",\", // {input_field_3 : called_write_one_sentence_here} \" \\\"description\\\" : \\\"${4:write_one_sentence_here}\\\",\", // {input_field_4 : called_write_one_sentence_here} \" \\\"validInputs\\\" : ${5:[], # references of ENUM-class only!}\", // {input_field_5 : called_reference_Array_of_valid_inputs_if_available} \" \\\"validType\\\" : getType_quack(),\", \" \\\"nameToShow\\\" : \\\"${0:write_max_two_words_here}\\\",\", // {input_field_5 : called_write_max_two_words_here} \"}\", \"\", \"\" ] } GDS extends Component class_name ________ var value: ________ func _init(valuePara:________) -> void : self.name = \"________\" value = valuePara static func getType_quack() -> String : return \"________\" static func getAutoDoc() -> Dictionary : return{ \"suggestion\" : \"________________________________\", \"description\" : \"________________________________\", \"validInputs\" : [________], # references of ENUM-class only! \"validType\" : getType_quack(), \"nameToShow\" : \"________________________________\", }","title":"Component"},{"location":"GettingStarted/Snippets/Component/#component","text":"","title":"Component"},{"location":"GettingStarted/Snippets/Component/#json","text":"\"COMPONENT\": { \"prefix\" : [\"SN: Component\"], \"description\" : \"Declare a new child of Component to describe a attribute of a Game-element\\n\", \"body\": [ \"extends Component\", \"class_name C_${TM_FILENAME_BASE/[C]//g}_${1/(.*)/${1:/upcase}/g}\", // {use_file_name ; select_C ; insert_blank} {input_field_1 : called_name} \"\", \"var value: ${2:static_typing_preffered}\", // {input_field_2 : called_static_typing_preffered} \"\", \"func _init(valuePara:${2/(.*)/${1}/g}) -> void :\", // {use_input_field_2 ; select_all ; insert_all} \" self.name = \\\"C_${TM_FILENAME_BASE/[C]//g}_${1/(.*)/${1:/upcase}/g}\\\"\", // {use_file_name ; select_C ; insert_blank} {use_input_field_1 ; select_all ; write_upper_case} \" value = valuePara\", \"\", \"\", \" \", \"\", \"static func getType_quack() -> String : return \\\"${2/(.*)/${1:/upcase}/g}\\\"\", // {use_second_input ; select_all ; writer_upper_case} \"\", \"\", \"static func getAutoDoc() -> Dictionary : \", \" return{\", \" \\\"suggestion\\\" : \\\"${3:write_one_sentence_here}\\\",\", // {input_field_3 : called_write_one_sentence_here} \" \\\"description\\\" : \\\"${4:write_one_sentence_here}\\\",\", // {input_field_4 : called_write_one_sentence_here} \" \\\"validInputs\\\" : ${5:[], # references of ENUM-class only!}\", // {input_field_5 : called_reference_Array_of_valid_inputs_if_available} \" \\\"validType\\\" : getType_quack(),\", \" \\\"nameToShow\\\" : \\\"${0:write_max_two_words_here}\\\",\", // {input_field_5 : called_write_max_two_words_here} \"}\", \"\", \"\" ] }","title":"JSON"},{"location":"GettingStarted/Snippets/Component/#gds","text":"extends Component class_name ________ var value: ________ func _init(valuePara:________) -> void : self.name = \"________\" value = valuePara static func getType_quack() -> String : return \"________\" static func getAutoDoc() -> Dictionary : return{ \"suggestion\" : \"________________________________\", \"description\" : \"________________________________\", \"validInputs\" : [________], # references of ENUM-class only! \"validType\" : getType_quack(), \"nameToShow\" : \"________________________________\", }","title":"GDS"},{"location":"GettingStarted/Snippets/Overview/","text":"Snippets Name Keyword Filepath Component Component GameSrc/Indexes/Component CLI-Class 009 CLI command GameSrc/Modules/009-CLI/Systems CLI MetaData 009 CLI dict entry GameSrc/Modules/009-CLI/Controller/Syntax.gd","title":"Snippets"},{"location":"GettingStarted/Snippets/Overview/#snippets","text":"Name Keyword Filepath Component Component GameSrc/Indexes/Component CLI-Class 009 CLI command GameSrc/Modules/009-CLI/Systems CLI MetaData 009 CLI dict entry GameSrc/Modules/009-CLI/Controller/Syntax.gd","title":"Snippets"},{"location":"GettingStarted/Workflows/Component/","text":"Implementing Component Look up the Dictionary in /GameSrc/PatnicRoom/Indexes/EntityAttributes/Components.gd if there is allready a Component for your Idea. you can find an detailed description of each in or XXX If you there is no Component, you can create your own in /GameSrc/PatnicRoom/Components Name the file C_X with X for an unique number You can use the Template down below as starting point, or you can use our Snippet in our IDE Make sure you declared all needed Data: class-name like your file with an Name added in Caps (3 words at max) Static typing of value when possible self.name in _init() has class-name as value dioJSONType_quack() return type in caps as String all entries in getAutoDoc() are filled out Add your Component in the Dictionary of /GameSrc/PatnicRoom/Indexes/EntityAttributes/Components.gd with its name as Key and class-reference as value Test it by Instanciating, adding it to an Entity and getting it by a function","title":"Implementing Component"},{"location":"GettingStarted/Workflows/Component/#implementing-component","text":"Look up the Dictionary in /GameSrc/PatnicRoom/Indexes/EntityAttributes/Components.gd if there is allready a Component for your Idea. you can find an detailed description of each in or XXX If you there is no Component, you can create your own in /GameSrc/PatnicRoom/Components Name the file C_X with X for an unique number You can use the Template down below as starting point, or you can use our Snippet in our IDE Make sure you declared all needed Data: class-name like your file with an Name added in Caps (3 words at max) Static typing of value when possible self.name in _init() has class-name as value dioJSONType_quack() return type in caps as String all entries in getAutoDoc() are filled out Add your Component in the Dictionary of /GameSrc/PatnicRoom/Indexes/EntityAttributes/Components.gd with its name as Key and class-reference as value Test it by Instanciating, adding it to an Entity and getting it by a function","title":"Implementing Component"},{"location":"GettingStarted/Workflows/Overview/","text":"","title":"Overview"},{"location":"Modules/001/Interactables/","text":"This System has no further functions than the common ones: Common Functions getEntries() Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\") getEntry(index) 1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\") getEntriesWithComp(compName) 1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\") getEntriesWithCompValue(searchValue, compName) 1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\") addEntity(Entity) 1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"Interactables"},{"location":"Modules/001/Interactables/#common-functions","text":"","title":"Common Functions"},{"location":"Modules/001/Interactables/#getentries","text":"Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\")","title":"getEntries()"},{"location":"Modules/001/Interactables/#getentryindex","text":"1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\")","title":"getEntry(index)"},{"location":"Modules/001/Interactables/#getentrieswithcompcompname","text":"1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\")","title":"getEntriesWithComp(compName)"},{"location":"Modules/001/Interactables/#getentrieswithcompvaluesearchvalue-compname","text":"1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\")","title":"getEntriesWithCompValue(searchValue, compName)"},{"location":"Modules/001/Interactables/#addentityentity","text":"1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"addEntity(Entity)"},{"location":"Modules/001/Overview/","text":"001 - Atlas Usage Collects all parsed LECs of /GameData after being parsed by Alecandria in Systems. Saves them in a Hashmap with its C_12_ATLAS_INDEX as key. Systems Individiual Systems have further specific functions to acces their Entities, they can be accesed by their name as function. Name/function Class of collection Tiles TileEntity Interactables InteractEntity Race Entity Role Entity Specialty Entity RNGActorTemplates ActorRngTemplateEntity KitParts child of KitPartEntity All Systems are sharing the following functions: * getEntries() * getEntry( index ) * getEntriesWithComp( compName ) * getEntriesWithCompValue( searchValue , compName ) * addEntity( entity ) Common Functions getEntries() Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\") getEntry(index) 1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\") getEntriesWithComp(compName) 1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\") getEntriesWithCompValue(searchValue, compName) 1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\") addEntity(Entity) 1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"001_Atlas"},{"location":"Modules/001/Overview/#001-atlas","text":"","title":"001 - Atlas"},{"location":"Modules/001/Overview/#usage","text":"Collects all parsed LECs of /GameData after being parsed by Alecandria in Systems. Saves them in a Hashmap with its C_12_ATLAS_INDEX as key.","title":"Usage"},{"location":"Modules/001/Overview/#systems","text":"Individiual Systems have further specific functions to acces their Entities, they can be accesed by their name as function. Name/function Class of collection Tiles TileEntity Interactables InteractEntity Race Entity Role Entity Specialty Entity RNGActorTemplates ActorRngTemplateEntity KitParts child of KitPartEntity All Systems are sharing the following functions: * getEntries() * getEntry( index ) * getEntriesWithComp( compName ) * getEntriesWithCompValue( searchValue , compName ) * addEntity( entity )","title":"Systems"},{"location":"Modules/001/Overview/#common-functions","text":"","title":"Common Functions"},{"location":"Modules/001/Overview/#getentries","text":"Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\")","title":"getEntries()"},{"location":"Modules/001/Overview/#getentryindex","text":"1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\")","title":"getEntry(index)"},{"location":"Modules/001/Overview/#getentrieswithcompcompname","text":"1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\")","title":"getEntriesWithComp(compName)"},{"location":"Modules/001/Overview/#getentrieswithcompvaluesearchvalue-compname","text":"1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\")","title":"getEntriesWithCompValue(searchValue, compName)"},{"location":"Modules/001/Overview/#addentityentity","text":"1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"addEntity(Entity)"},{"location":"Modules/001/RNGActorTemplates/","text":"This System has no further functions than the common ones: Common Functions getEntries() Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\") getEntry(index) 1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\") getEntriesWithComp(compName) 1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\") getEntriesWithCompValue(searchValue, compName) 1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\") addEntity(Entity) 1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"RNGActorTemplates"},{"location":"Modules/001/RNGActorTemplates/#common-functions","text":"","title":"Common Functions"},{"location":"Modules/001/RNGActorTemplates/#getentries","text":"Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\")","title":"getEntries()"},{"location":"Modules/001/RNGActorTemplates/#getentryindex","text":"1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\")","title":"getEntry(index)"},{"location":"Modules/001/RNGActorTemplates/#getentrieswithcompcompname","text":"1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\")","title":"getEntriesWithComp(compName)"},{"location":"Modules/001/RNGActorTemplates/#getentrieswithcompvaluesearchvalue-compname","text":"1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\")","title":"getEntriesWithCompValue(searchValue, compName)"},{"location":"Modules/001/RNGActorTemplates/#addentityentity","text":"1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"addEntity(Entity)"},{"location":"Modules/001/Race/","text":"This System has no further functions than the common ones: Common Functions getEntries() Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\") getEntry(index) 1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\") getEntriesWithComp(compName) 1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\") getEntriesWithCompValue(searchValue, compName) 1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\") addEntity(Entity) 1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"Race"},{"location":"Modules/001/Race/#common-functions","text":"","title":"Common Functions"},{"location":"Modules/001/Race/#getentries","text":"Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\")","title":"getEntries()"},{"location":"Modules/001/Race/#getentryindex","text":"1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\")","title":"getEntry(index)"},{"location":"Modules/001/Race/#getentrieswithcompcompname","text":"1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\")","title":"getEntriesWithComp(compName)"},{"location":"Modules/001/Race/#getentrieswithcompvaluesearchvalue-compname","text":"1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\")","title":"getEntriesWithCompValue(searchValue, compName)"},{"location":"Modules/001/Race/#addentityentity","text":"1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"addEntity(Entity)"},{"location":"Modules/001/Role/","text":"This System has no further functions than the common ones: Common Functions getEntries() Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\") getEntry(index) 1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\") getEntriesWithComp(compName) 1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\") getEntriesWithCompValue(searchValue, compName) 1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\") addEntity(Entity) 1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"Role"},{"location":"Modules/001/Role/#common-functions","text":"","title":"Common Functions"},{"location":"Modules/001/Role/#getentries","text":"Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\")","title":"getEntries()"},{"location":"Modules/001/Role/#getentryindex","text":"1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\")","title":"getEntry(index)"},{"location":"Modules/001/Role/#getentrieswithcompcompname","text":"1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\")","title":"getEntriesWithComp(compName)"},{"location":"Modules/001/Role/#getentrieswithcompvaluesearchvalue-compname","text":"1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\")","title":"getEntriesWithCompValue(searchValue, compName)"},{"location":"Modules/001/Role/#addentityentity","text":"1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"addEntity(Entity)"},{"location":"Modules/001/Specialty/","text":"This System has no further functions than the common ones: Common Functions getEntries() Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\") getEntry(index) 1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\") getEntriesWithComp(compName) 1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\") getEntriesWithCompValue(searchValue, compName) 1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\") addEntity(Entity) 1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"Specialty"},{"location":"Modules/001/Specialty/#common-functions","text":"","title":"Common Functions"},{"location":"Modules/001/Specialty/#getentries","text":"Returns : Hashmap all collected Entities in. key of each Entity is the value of Component C_12_ATLAS_INDEX . If you are looking for a single entity, the function getEntry(index) may be more suitable. Example: var allTileEnts = API_001_Atlas.Tiles().getEntries() var sumOfTiles = int(allTileEnts.size())+1 print(\"PatnicRoom has \"+ str(sumOfTiles) +\" possible tiles!\")","title":"getEntries()"},{"location":"Modules/001/Specialty/#getentryindex","text":"1st Parameter : value of C_12_ATLAS_INDEX as String Returns : Entity with its corresponding index. can be used to instanciates a exact copy of an Element, keep in mind that changing its manipulating Components will greatly influence future procedural generations. Example: var tileEnt = API_001_Atlas.Tiles().getEntry(\"Terrain_0_0\") var nameOfEnt = tileEnt.name() print(\"one of its Tiles is called \"+ nameEnt +\"!\")","title":"getEntry(index)"},{"location":"Modules/001/Specialty/#getentrieswithcompcompname","text":"1st Parameter : class-name of Component as String Returns : Array of Entities which contain Component can be used to granulate search for sppecific. If you are looking for a specific value, the function getEntriesWithCompValue(searchValue, compName) may be more suitable. Example: var killableTiles = API_001_Atlas.Tiles().getEntriesWithComp(\"C_57_HITPOINTS\") var sumOfkillables = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles even can be damaged!\")","title":"getEntriesWithComp(compName)"},{"location":"Modules/001/Specialty/#getentrieswithcompvaluesearchvalue-compname","text":"1st Parameter : class-name of Component as String 2nd Parameter : value of Component as dynamic type Returns : Array of Entities which contain Component and equals searched value May lead to Performance issues if used in frequently called functions like _process() or _input() Example: var walkableTiles = API_001_Atlas.Tiles().getEntriesWithCompValue(true,\"C_1_IS_WALKABLE\") var sumOfTiles = int(killableTiles.size())+1 print(str(sumOfTiles) +\"Tiles can be stand on!\")","title":"getEntriesWithCompValue(searchValue, compName)"},{"location":"Modules/001/Specialty/#addentityentity","text":"1st Parameter : Entity, specific child if possibly Returns : void Adds Entity into System, prints error if it already exists or has wrong Class. Should not be neccessary after Booting the Game.","title":"addEntity(Entity)"},{"location":"Modules/001/Tiles/","text":"Atlas for Tiles Usage has as expansion a Hashmap which collects Tiles ordered by its TileSet. Functions getTileSetEntries() Returns : All Tiles of a all TileSets as Hashmap key of each Array of Tiles is the name of TileSet. If you are looking for a single TileSet, the function getEntry(index) may be more suitable. Example: var allTileSets = API_001_Atlas.Tiles().getTileSetEntries() var sumOfTileSets = int(allTileSets.size())+1 print(\"PatnicRoom has \"+ str(sumOfTileSets) +\" themes/sets for Tiles!\") getTilesOfSet(tileSetName) 1st Parameter : name of TileSet as String Returns : All TileEntities in a TileSet as Array . Example: var tileSetName = \"Terrain\" var allTilesInSet = API_001_Atlas.Tiles().getTilesOfSet(tileSetName) var sumOfTileSet = int(allTilesInSet.size())+1 print(\"The TileSet \"+ tileSetName +\"has \"+ str(sumOfTileSet) +\"different Tiles\")","title":"Atlas for Tiles"},{"location":"Modules/001/Tiles/#atlas-for-tiles","text":"","title":"Atlas for Tiles"},{"location":"Modules/001/Tiles/#usage","text":"has as expansion a Hashmap which collects Tiles ordered by its TileSet.","title":"Usage"},{"location":"Modules/001/Tiles/#functions","text":"","title":"Functions"},{"location":"Modules/001/Tiles/#gettilesetentries","text":"Returns : All Tiles of a all TileSets as Hashmap key of each Array of Tiles is the name of TileSet. If you are looking for a single TileSet, the function getEntry(index) may be more suitable. Example: var allTileSets = API_001_Atlas.Tiles().getTileSetEntries() var sumOfTileSets = int(allTileSets.size())+1 print(\"PatnicRoom has \"+ str(sumOfTileSets) +\" themes/sets for Tiles!\")","title":"getTileSetEntries()"},{"location":"Modules/001/Tiles/#gettilesofsettilesetname","text":"1st Parameter : name of TileSet as String Returns : All TileEntities in a TileSet as Array . Example: var tileSetName = \"Terrain\" var allTilesInSet = API_001_Atlas.Tiles().getTilesOfSet(tileSetName) var sumOfTileSet = int(allTilesInSet.size())+1 print(\"The TileSet \"+ tileSetName +\"has \"+ str(sumOfTileSet) +\"different Tiles\")","title":"getTilesOfSet(tileSetName)"},{"location":"Modules/001/kitParts/","text":"Atlas for KitParts Usage has as expansion a Hashmap which collects Tiles ordered by its TileSet. Functions sortEntries() Returns : void can be used to sort KitParts after some new got added. Should not be neccessary after Booting the Game. getEntryByName(tileSetName) 1st Parameter : value of C_6_NAME as String Returns : corresponding KitPart as child of KitPartEntity can be used if only the name of a kit is known, for example by UI-elements Example: var kitPartName = \"X_C_1\" var kitPartEnt = API_001_Atlas.KitParts().getEntryByName(kitPartName) print(kitPartName +\" has a rarity of \"+ kitPartEnt.rarity()) getKitGroup(string_enum_kitCat) 1st Parameter : name of TileSet as enum or its String Returns : all KitPartEntities of the Category Example: var allMeeleKits = API_001_Atlas.Tiles().getKitGroup(\"MEEELE\") var sumOfMeele = int(allMeeleKits.size())+1 print(\"there are \"+ str(sumOfMeele) +\" meele weapons\")","title":"Atlas for KitParts"},{"location":"Modules/001/kitParts/#atlas-for-kitparts","text":"","title":"Atlas for KitParts"},{"location":"Modules/001/kitParts/#usage","text":"has as expansion a Hashmap which collects Tiles ordered by its TileSet.","title":"Usage"},{"location":"Modules/001/kitParts/#functions","text":"","title":"Functions"},{"location":"Modules/001/kitParts/#sortentries","text":"Returns : void can be used to sort KitParts after some new got added. Should not be neccessary after Booting the Game.","title":"sortEntries()"},{"location":"Modules/001/kitParts/#getentrybynametilesetname","text":"1st Parameter : value of C_6_NAME as String Returns : corresponding KitPart as child of KitPartEntity can be used if only the name of a kit is known, for example by UI-elements Example: var kitPartName = \"X_C_1\" var kitPartEnt = API_001_Atlas.KitParts().getEntryByName(kitPartName) print(kitPartName +\" has a rarity of \"+ kitPartEnt.rarity())","title":"getEntryByName(tileSetName)"},{"location":"Modules/001/kitParts/#getkitgroupstring_enum_kitcat","text":"1st Parameter : name of TileSet as enum or its String Returns : all KitPartEntities of the Category Example: var allMeeleKits = API_001_Atlas.Tiles().getKitGroup(\"MEEELE\") var sumOfMeele = int(allMeeleKits.size())+1 print(\"there are \"+ str(sumOfMeele) +\" meele weapons\")","title":"getKitGroup(string_enum_kitCat)"},{"location":"Modules/002/Condition/","text":"","title":"Condition"},{"location":"Modules/002/Magic_Floor/","text":"","title":"Magic Floor"},{"location":"Modules/002/Magic_Interactable/","text":"","title":"Magic Interactable"},{"location":"Modules/002/Matrix_Floor/","text":"","title":"Matrix Floor"},{"location":"Modules/002/Matrix_Interactable/","text":"","title":"Matrix Interactable"},{"location":"Modules/002/Meat_Floor/","text":"","title":"Meat Floor"},{"location":"Modules/002/Meat_Interactable/","text":"","title":"Meat Interactable"},{"location":"Modules/002/NPC/","text":"","title":"NPC"},{"location":"Modules/002/Overview/","text":"002 - Tilemap_Structure Usage Expansion of SokraTiles , its used for getters which are either not dependant on a Layer or in need of Multiple Ones. Its also where the instanciated Classes fpr each Layer are located. Systems Name Usage Layer_Actor_NPC functions for Layer Layer_Actor_Player functions for Layer Layer_Animation_Condition functions for Layer Layer_Animation_Selection functions for Layer Layer_Matrix_Floor functions for Layer Layer_Matrix_Interactables functions for Layer time Layer_Meat_Floor functions for Layer Layer_Meat_Interactables functions for Layer Layer_Magic_Floor functions for Layer Layer_Magic_Interactables functions for Layer KitParts TileInterpreter runs contextual events when stepping on them(can be called via this API) Utils Helpers for other Systems Functions getMovePos(startingPos,directionFourEnum) 1st Parameter : Vector2 of starting-position 2nd Parameter : int of ENUM.DIRECTION_FOUR Returns : Vector2D calculates the Vector when walked one time in a direction Example: getMovePosByMultiple(startingPos,directionFourEnum,times) 1st Parameter : Vector2 of starting-position 2nd Parameter : Integer of ENUM.DIRECTION_FOUR 3rd Parameter : Integere of times walked Returns : Vector2D calculates the Vector when walked X time in a direction Example: interpreteTile(entity,chunkToInterprete) 1st Parameter : Entity which walked 2nd Parameter : System which should be used to interprete the walk by Returns : Dynamic triggers events when Actors walk on Tilemap. I.E possibilty to enter Rest when walking on the PanicRoom. I.E attaching burning to an Actor when walking into it. Example:","title":"002_TilemapStructure"},{"location":"Modules/002/Overview/#002-tilemap_structure","text":"","title":"002 - Tilemap_Structure"},{"location":"Modules/002/Overview/#usage","text":"Expansion of SokraTiles , its used for getters which are either not dependant on a Layer or in need of Multiple Ones. Its also where the instanciated Classes fpr each Layer are located.","title":"Usage"},{"location":"Modules/002/Overview/#systems","text":"Name Usage Layer_Actor_NPC functions for Layer Layer_Actor_Player functions for Layer Layer_Animation_Condition functions for Layer Layer_Animation_Selection functions for Layer Layer_Matrix_Floor functions for Layer Layer_Matrix_Interactables functions for Layer time Layer_Meat_Floor functions for Layer Layer_Meat_Interactables functions for Layer Layer_Magic_Floor functions for Layer Layer_Magic_Interactables functions for Layer KitParts TileInterpreter runs contextual events when stepping on them(can be called via this API) Utils Helpers for other Systems","title":"Systems"},{"location":"Modules/002/Overview/#functions","text":"","title":"Functions"},{"location":"Modules/002/Overview/#getmoveposstartingposdirectionfourenum","text":"1st Parameter : Vector2 of starting-position 2nd Parameter : int of ENUM.DIRECTION_FOUR Returns : Vector2D calculates the Vector when walked one time in a direction Example:","title":"getMovePos(startingPos,directionFourEnum)"},{"location":"Modules/002/Overview/#getmoveposbymultiplestartingposdirectionfourenumtimes","text":"1st Parameter : Vector2 of starting-position 2nd Parameter : Integer of ENUM.DIRECTION_FOUR 3rd Parameter : Integere of times walked Returns : Vector2D calculates the Vector when walked X time in a direction Example:","title":"getMovePosByMultiple(startingPos,directionFourEnum,times)"},{"location":"Modules/002/Overview/#interpretetileentitychunktointerprete","text":"1st Parameter : Entity which walked 2nd Parameter : System which should be used to interprete the walk by Returns : Dynamic triggers events when Actors walk on Tilemap. I.E possibilty to enter Rest when walking on the PanicRoom. I.E attaching burning to an Actor when walking into it. Example:","title":"interpreteTile(entity,chunkToInterprete)"},{"location":"Modules/002/Player/","text":"","title":"Player"},{"location":"Modules/002/Selection/","text":"","title":"Selection"},{"location":"Modules/003/Overview/","text":"003 - Player Summary This module is for getting and manipulating the data of the current Character on the tilemap like Healthpoints or Kitsets and the data shared between his team like kitparts. Functions Rest getStations() Returns : All three Stations and their current state. contains Information for manipulating KitSets (I.E. current time till completion) Example: getCurrentStationSetter() Returns : Helper function with with corresponding station as reference has functions to its Station values (I.E. decrementing time till completion) Example: Player generation getEntries(dictToGenerate) 1st Parameter : Dictionary with Vlaues of Components to Generate Entity Returns : Lorem Ipsum Lorem Ipsum Example: loadQuickStartChar() Returns : Void Generates PlayerEntity of SaveState Quickstart for special Bootmodes like starting in Panic Example: loadCharBySaveStateName(name) 1st Parameter : String of Name of SaveState to generate Returns : Void Generates PlayerEntity of SaveState with that name and sets Runner 1 as currentChar Example: setIndirectStats(entity) 1st Parameter : Actor which should get calculated stats Returns : Void Calculates indirect stats (I.E. Hitpoints) of an Actor and adds them as a Component Example:","title":"003_Player"},{"location":"Modules/003/Overview/#003-player","text":"","title":"003 - Player"},{"location":"Modules/003/Overview/#summary","text":"This module is for getting and manipulating the data of the current Character on the tilemap like Healthpoints or Kitsets and the data shared between his team like kitparts.","title":"Summary"},{"location":"Modules/003/Overview/#functions","text":"","title":"Functions"},{"location":"Modules/003/Overview/#rest","text":"","title":"Rest"},{"location":"Modules/003/Overview/#getstations","text":"Returns : All three Stations and their current state. contains Information for manipulating KitSets (I.E. current time till completion) Example:","title":"getStations()"},{"location":"Modules/003/Overview/#getcurrentstationsetter","text":"Returns : Helper function with with corresponding station as reference has functions to its Station values (I.E. decrementing time till completion) Example:","title":"getCurrentStationSetter()"},{"location":"Modules/003/Overview/#player-generation","text":"","title":"Player generation"},{"location":"Modules/003/Overview/#getentriesdicttogenerate","text":"1st Parameter : Dictionary with Vlaues of Components to Generate Entity Returns : Lorem Ipsum Lorem Ipsum Example:","title":"getEntries(dictToGenerate)"},{"location":"Modules/003/Overview/#loadquickstartchar","text":"Returns : Void Generates PlayerEntity of SaveState Quickstart for special Bootmodes like starting in Panic Example:","title":"loadQuickStartChar()"},{"location":"Modules/003/Overview/#loadcharbysavestatenamename","text":"1st Parameter : String of Name of SaveState to generate Returns : Void Generates PlayerEntity of SaveState with that name and sets Runner 1 as currentChar Example:","title":"loadCharBySaveStateName(name)"},{"location":"Modules/003/Overview/#setindirectstatsentity","text":"1st Parameter : Actor which should get calculated stats Returns : Void Calculates indirect stats (I.E. Hitpoints) of an Actor and adds them as a Component Example:","title":"setIndirectStats(entity)"},{"location":"Modules/004/Overview/","text":"004 - KitSet Summary API Systems Manager","title":"004_KitSet"},{"location":"Modules/004/Overview/#004-kitset","text":"","title":"004 - KitSet"},{"location":"Modules/004/Overview/#summary","text":"","title":"Summary"},{"location":"Modules/004/Overview/#api","text":"","title":"API"},{"location":"Modules/004/Overview/#systems","text":"","title":"Systems"},{"location":"Modules/004/Overview/#manager","text":"","title":"Manager"},{"location":"Modules/005/Overview/","text":"005 - Event Usage contains subSystem for Selection and Running of Kits. Is only used by API_004_KitSet for which manages the different functionscalls Functions getSource() Returns : Array of Vector2 Uses the Kit referenced in API_004_KitSet.selection getSelectedPositions() Returns : Array of Vector2 Uses the Kit referenced in API_004_KitSet.selection runConsideration() Returns : Array of Entities Uses the Kit referenced in API_004_KitSet.selection runKitSet() Returns : void Uses the Kit referenced in API_004_KitSet.selection getHighlightColor() Returns : String Uses the Kit referenced in API_004_KitSet.selection getAlertColor() Returns : String Uses the Kit referenced in API_004_KitSet.selection getAlertColor() Returns : String Uses the Kit referenced in API_004_KitSet.selection","title":"005_Event"},{"location":"Modules/005/Overview/#005-event","text":"","title":"005 - Event"},{"location":"Modules/005/Overview/#usage","text":"contains subSystem for Selection and Running of Kits. Is only used by API_004_KitSet for which manages the different functionscalls","title":"Usage"},{"location":"Modules/005/Overview/#functions","text":"","title":"Functions"},{"location":"Modules/005/Overview/#getsource","text":"Returns : Array of Vector2 Uses the Kit referenced in API_004_KitSet.selection","title":"getSource()"},{"location":"Modules/005/Overview/#getselectedpositions","text":"Returns : Array of Vector2 Uses the Kit referenced in API_004_KitSet.selection","title":"getSelectedPositions()"},{"location":"Modules/005/Overview/#runconsideration","text":"Returns : Array of Entities Uses the Kit referenced in API_004_KitSet.selection","title":"runConsideration()"},{"location":"Modules/005/Overview/#runkitset","text":"Returns : void Uses the Kit referenced in API_004_KitSet.selection","title":"runKitSet()"},{"location":"Modules/005/Overview/#gethighlightcolor","text":"Returns : String Uses the Kit referenced in API_004_KitSet.selection","title":"getHighlightColor()"},{"location":"Modules/005/Overview/#getalertcolor","text":"Returns : String Uses the Kit referenced in API_004_KitSet.selection","title":"getAlertColor()"},{"location":"Modules/005/Overview/#getalertcolor_1","text":"Returns : String Uses the Kit referenced in API_004_KitSet.selection","title":"getAlertColor()"},{"location":"Modules/006/List/","text":"List of Conditions Name Description BURNING makes damage of LVL over DURA round, decrements damage each round, can spread by 30 % ELECTRIFYING makes damage of LVL over DURA round, decrements damage each round, can spread by 30 % INCAPACITATED Affected Entity can not move for DURA WET can spread by 20 %","title":"List of Conditions"},{"location":"Modules/006/List/#list-of-conditions","text":"Name Description BURNING makes damage of LVL over DURA round, decrements damage each round, can spread by 30 % ELECTRIFYING makes damage of LVL over DURA round, decrements damage each round, can spread by 30 % INCAPACITATED Affected Entity can not move for DURA WET can spread by 20 %","title":"List of Conditions"},{"location":"Modules/006/Overview/","text":"006 - Condition Summary This Module stores the different types of effects and contains the SubSystem to attach conditions to entities. Functions attachConditionToEnt(Entity,condIndex,dura,lvl) 1st Parameter : Entity to affect 2nd Parameter : String of class of Conditions 3rd Parameter : int of rounds it affects Entity 4th Parameter : int of intensity, has contextual significance or even not needed Returns : void Instanciates the Condition by the second parameter, initialice the corresponding variables and connects it to broadcast-pattern for ent in API_004_KitSet.selection.triggers: API_006_Condition.attachConditionToEnt(ent, para.condName, para.duration, para.level)","title":"006_Conditions"},{"location":"Modules/006/Overview/#006-condition","text":"","title":"006 - Condition"},{"location":"Modules/006/Overview/#summary","text":"This Module stores the different types of effects and contains the SubSystem to attach conditions to entities.","title":"Summary"},{"location":"Modules/006/Overview/#functions","text":"","title":"Functions"},{"location":"Modules/006/Overview/#attachconditiontoententitycondindexduralvl","text":"1st Parameter : Entity to affect 2nd Parameter : String of class of Conditions 3rd Parameter : int of rounds it affects Entity 4th Parameter : int of intensity, has contextual significance or even not needed Returns : void Instanciates the Condition by the second parameter, initialice the corresponding variables and connects it to broadcast-pattern for ent in API_004_KitSet.selection.triggers: API_006_Condition.attachConditionToEnt(ent, para.condName, para.duration, para.level)","title":"attachConditionToEnt(Entity,condIndex,dura,lvl)"},{"location":"Modules/007/Overview/","text":"007 - StatMods Summary This module holds the Collection of the procedures the customiced/hardocoded events which happen with Entities. Functions getStatModNames() Returns : Array of String of Statmod indexes Lorem Ipsum Lorem Ipsum Lorem Ipsum getStatMods() Returns : Dictionary of Statmods with its Class as Value Lorem Ipsum Lorem Ipsum Lorem Ipsum manageUniqueStatmod(ent,statModIndex,modValue) 1st Parameter : Entity to affect 2nd Parameter : index of Statmod 3rd Parameter : contextual parameters for run() of Statmod, varies wiedly Returns : void Lorem Ipsum Lorem Ipsum Lorem Ipsum","title":"007_StatMods"},{"location":"Modules/007/Overview/#007-statmods","text":"","title":"007 - StatMods"},{"location":"Modules/007/Overview/#summary","text":"This module holds the Collection of the procedures the customiced/hardocoded events which happen with Entities.","title":"Summary"},{"location":"Modules/007/Overview/#functions","text":"","title":"Functions"},{"location":"Modules/007/Overview/#getstatmodnames","text":"Returns : Array of String of Statmod indexes Lorem Ipsum Lorem Ipsum Lorem Ipsum","title":"getStatModNames()"},{"location":"Modules/007/Overview/#getstatmods","text":"Returns : Dictionary of Statmods with its Class as Value Lorem Ipsum Lorem Ipsum Lorem Ipsum","title":"getStatMods()"},{"location":"Modules/007/Overview/#manageuniquestatmodentstatmodindexmodvalue","text":"1st Parameter : Entity to affect 2nd Parameter : index of Statmod 3rd Parameter : contextual parameters for run() of Statmod, varies wiedly Returns : void Lorem Ipsum Lorem Ipsum Lorem Ipsum","title":"manageUniqueStatmod(ent,statModIndex,modValue)"},{"location":"Modules/007/list/","text":"List of StatMod Name Description U_DEAL_PLAIN_DAMAGE Deal damage to actors U_EXCHANGE_TEXTURE Change Texture to C_58_ALTERNATIVE_TEXTURES U_MOVE_USER WIP U_SPAWN_TILE_AROUND Spawn Tile around by index U_SPAWN_TILE Spawn Tile by index","title":"List of StatMod"},{"location":"Modules/007/list/#list-of-statmod","text":"Name Description U_DEAL_PLAIN_DAMAGE Deal damage to actors U_EXCHANGE_TEXTURE Change Texture to C_58_ALTERNATIVE_TEXTURES U_MOVE_USER WIP U_SPAWN_TILE_AROUND Spawn Tile around by index U_SPAWN_TILE Spawn Tile by index","title":"List of StatMod"},{"location":"Modules/008/Overview/","text":"008 - CLI Summary This module holds the Collection of the procedures the customiced/hardocoded events which happen with Entities. Functions getGroupedSyntax() Returns : Dictionary of _009_MetaData returns all information about all Cmds, they are grouped in commonalities. This grouping makes itterating not that comfortable, try getAllCmdMeta() for this. for category in API_008_CLI.getGroupedSyntax().values(): for cmd in category.values(): var key = cmd[\"input\"] cmdsSyntax[key] = cmd cmdsToString.append(key) getMetaByInputKey(key) 1st Parameter : String of possible inputs Returns : Dictionary with all MetaData to this Command Used as Getter getMetaByInputKey(cmd)[\"class\"].run(arrOfParameter) getAllCmdMeta() Returns : Dictionary with direct MetaData as Value, keyed by their input Used for Itterating through all MetaDatas for entry in API_008_CLI.getAllCmdMeta().values(): var parameter = entry.parameter as PoolStringArray var row = [entry.input,entry.toString,str(parameter.join(\", \"))] if !\"WIP\" in entry.input: mdWriter.add_row_table(row)","title":"008_CLI"},{"location":"Modules/008/Overview/#008-cli","text":"","title":"008 - CLI"},{"location":"Modules/008/Overview/#summary","text":"This module holds the Collection of the procedures the customiced/hardocoded events which happen with Entities.","title":"Summary"},{"location":"Modules/008/Overview/#functions","text":"","title":"Functions"},{"location":"Modules/008/Overview/#getgroupedsyntax","text":"Returns : Dictionary of _009_MetaData returns all information about all Cmds, they are grouped in commonalities. This grouping makes itterating not that comfortable, try getAllCmdMeta() for this. for category in API_008_CLI.getGroupedSyntax().values(): for cmd in category.values(): var key = cmd[\"input\"] cmdsSyntax[key] = cmd cmdsToString.append(key)","title":"getGroupedSyntax()"},{"location":"Modules/008/Overview/#getmetabyinputkeykey","text":"1st Parameter : String of possible inputs Returns : Dictionary with all MetaData to this Command Used as Getter getMetaByInputKey(cmd)[\"class\"].run(arrOfParameter)","title":"getMetaByInputKey(key)"},{"location":"Modules/008/Overview/#getallcmdmeta","text":"Returns : Dictionary with direct MetaData as Value, keyed by their input Used for Itterating through all MetaDatas for entry in API_008_CLI.getAllCmdMeta().values(): var parameter = entry.parameter as PoolStringArray var row = [entry.input,entry.toString,str(parameter.join(\", \"))] if !\"WIP\" in entry.input: mdWriter.add_row_table(row)","title":"getAllCmdMeta()"},{"location":"Modules/008/list/","text":"List of Commands input description parameter restmode enters the P@nicroom of the chunk no clip walking through inwalkables all kitparts add all kitparts into inventory add credits add credits to account amount spawn actor spawn random actor above template spawn tile spawn tile above index story map load map of story-mode map name unique map load unique map name","title":"List of Commands"},{"location":"Modules/008/list/#list-of-commands","text":"input description parameter restmode enters the P@nicroom of the chunk no clip walking through inwalkables all kitparts add all kitparts into inventory add credits add credits to account amount spawn actor spawn random actor above template spawn tile spawn tile above index story map load map of story-mode map name unique map load unique map name","title":"List of Commands"},{"location":"Modules/009/List/","text":"List of Commands input description parameter spawn actor spawn random actor above template all kitparts add all kitparts into inventory unique map load unique map name story map load story map name add credits add credits to account amount spawn tile spawn tile above index restmode enters the P@nicroom of the chunk no clip walking through inwalkables","title":"List of Commands"},{"location":"Modules/009/List/#list-of-commands","text":"input description parameter spawn actor spawn random actor above template all kitparts add all kitparts into inventory unique map load unique map name story map load story map name add credits add credits to account amount spawn tile spawn tile above index restmode enters the P@nicroom of the chunk no clip walking through inwalkables","title":"List of Commands"},{"location":"Modules/009/Overview/","text":"009 - Sound Summary API Systems Manager","title":"009_Sound"},{"location":"Modules/009/Overview/#009-sound","text":"","title":"009 - Sound"},{"location":"Modules/009/Overview/#summary","text":"","title":"Summary"},{"location":"Modules/009/Overview/#api","text":"","title":"API"},{"location":"Modules/009/Overview/#systems","text":"","title":"Systems"},{"location":"Modules/009/Overview/#manager","text":"","title":"Manager"},{"location":"Modules/010/Overview/","text":"010 - ProcGen Actor Summary This module randomly generates an Actor by its limits of its Template and can delete it. Generall Functions Name Return Type Notation RNGenerateBasicActor(templateIndexString) Dictionary creates a Dictionary of all needed Infos to instanciate an Actor createActorTemplate(rNGeneratedActorDict) ActorEntity Instanciates an Actor by Dictionary ( must have the content from the return of above ) removeActorFromGame(ActorEntity) void frees ActorEntity when possible","title":"010 - ProcGen Actor"},{"location":"Modules/010/Overview/#010-procgen-actor","text":"","title":"010 - ProcGen Actor"},{"location":"Modules/010/Overview/#summary","text":"This module randomly generates an Actor by its limits of its Template and can delete it.","title":"Summary"},{"location":"Modules/010/Overview/#generall-functions","text":"","title":"Generall Functions"},{"location":"Modules/011/Overview/","text":"WORK IN PROGRESS","title":"011_ProcGen_Actor"},{"location":"Modules/011/Overview/#work-in-progress","text":"","title":"WORK IN PROGRESS"},{"location":"Modules/012/Overview/","text":"WORK IN PROGRESS","title":"012_ProcGen_Loot"},{"location":"Modules/012/Overview/#work-in-progress","text":"","title":"WORK IN PROGRESS"},{"location":"Modules/013/Overview/","text":"012 - Behavior Summary API Systems Manager","title":"013_ProcGen_Chunk"},{"location":"Modules/013/Overview/#012-behavior","text":"","title":"012 - Behavior"},{"location":"Modules/013/Overview/#summary","text":"","title":"Summary"},{"location":"Modules/013/Overview/#api","text":"","title":"API"},{"location":"Modules/013/Overview/#systems","text":"","title":"Systems"},{"location":"Modules/013/Overview/#manager","text":"","title":"Manager"},{"location":"Syntax/ActorAttributes/","text":"Race META INDEX --> ELF USE --> ACTOR_RACE BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ MAIN //-------\\\\ COMPONENTS C_12_ATLAS_INDEX ---> ELF C_6_NAME ---> Elf C_0_DESCRIPTION ---> just like humans,but in tiny C_27_RACIAL_ENEMIES ---> ELF C_28_RACIAL_FRIENDS ---> ORC AND DWARF C_19_ATTRIBUTES vvvv CON ---> 5 AGI ---> 5 REA ---> 5 STR ---> 5 WIL ---> 5 LOG ---> 5 INT ---> 5 CHA ---> 5 //-------\\\\ FLAGS F_6_ACTOR_ATTRIBUTES F_11_ACTOR_ATTRIBUTES_RACE //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END Role META INDEX --> ARSENIST_1 USE --> ACTOR_ROLE BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ MAIN //-------\\\\ COMPONENTS C_12_ATLAS_INDEX ---> ARSENIST_1 C_6_NAME ---> Arsenist T1 C_65_TIER ---> 1 C_0_DESCRIPTION ---> Young teenager with behavioural problems and attention deficit C_47_SYNONYM ---> Troublemaker AND Arsenist AND Firestarter C_37_M_TYPE ---> MEAT C_19_ATTRIBUTES vvvv CON ---> 5 AGI ---> 5 REA ---> 5 STR ---> 5 WIL ---> 5 LOG ---> 5 INT ---> 5 CHA ---> 5 C_20_SKILLBLOCK vvvv SURVIVAL ---> 5 SNEAKING ---> 5 PERCEPTION ---> 5 INTIMIDATION ---> 5 COMPUTER ---> 5 //-------\\\\ FLAGS F_6_ACTOR_ATTRIBUTES F_10_ACTOR_ATTRIBUTES_ROLES //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END Specialty META INDEX --> FECAL_ANALYCER USE --> ACTOR_SPECIALTY BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ MAIN //-------\\\\ COMPONENTS C_12_ATLAS_INDEX ---> FECAL_ANALYCER C_6_NAME ---> Fecal analycer C_14_SPECIALTY_NAME ---> Fecal analycer C_50_ACTOR_ROLE_DESCRIPTION ---> probably still earns as mucg as your typicall wageslave C_47_SYNONYM ---> bottle collector AND coupon collector AND dumpster diver C_37_M_TYPE ---> MEAT C_19_ATTRIBUTES vvvv CON ---> 5 AGI ---> 5 REA ---> 5 STR ---> 5 WIL ---> 5 LOG ---> 5 INT ---> 5 CHA ---> 5 C_20_SKILLBLOCK vvvv SURVIVAL ---> 5 SNEAKING ---> 5 PERCEPTION ---> 5 INTIMIDATION ---> 5 COMPUTER ---> 5 //-------\\\\ FLAGS F_6_ACTOR_ATTRIBUTES F_7_ACTOR_ATTRIBUTES_SPECIALTY //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"Race"},{"location":"Syntax/ActorAttributes/#race","text":"META INDEX --> ELF USE --> ACTOR_RACE BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ MAIN //-------\\\\ COMPONENTS C_12_ATLAS_INDEX ---> ELF C_6_NAME ---> Elf C_0_DESCRIPTION ---> just like humans,but in tiny C_27_RACIAL_ENEMIES ---> ELF C_28_RACIAL_FRIENDS ---> ORC AND DWARF C_19_ATTRIBUTES vvvv CON ---> 5 AGI ---> 5 REA ---> 5 STR ---> 5 WIL ---> 5 LOG ---> 5 INT ---> 5 CHA ---> 5 //-------\\\\ FLAGS F_6_ACTOR_ATTRIBUTES F_11_ACTOR_ATTRIBUTES_RACE //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"Race"},{"location":"Syntax/ActorAttributes/#role","text":"META INDEX --> ARSENIST_1 USE --> ACTOR_ROLE BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ MAIN //-------\\\\ COMPONENTS C_12_ATLAS_INDEX ---> ARSENIST_1 C_6_NAME ---> Arsenist T1 C_65_TIER ---> 1 C_0_DESCRIPTION ---> Young teenager with behavioural problems and attention deficit C_47_SYNONYM ---> Troublemaker AND Arsenist AND Firestarter C_37_M_TYPE ---> MEAT C_19_ATTRIBUTES vvvv CON ---> 5 AGI ---> 5 REA ---> 5 STR ---> 5 WIL ---> 5 LOG ---> 5 INT ---> 5 CHA ---> 5 C_20_SKILLBLOCK vvvv SURVIVAL ---> 5 SNEAKING ---> 5 PERCEPTION ---> 5 INTIMIDATION ---> 5 COMPUTER ---> 5 //-------\\\\ FLAGS F_6_ACTOR_ATTRIBUTES F_10_ACTOR_ATTRIBUTES_ROLES //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"Role"},{"location":"Syntax/ActorAttributes/#specialty","text":"META INDEX --> FECAL_ANALYCER USE --> ACTOR_SPECIALTY BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ MAIN //-------\\\\ COMPONENTS C_12_ATLAS_INDEX ---> FECAL_ANALYCER C_6_NAME ---> Fecal analycer C_14_SPECIALTY_NAME ---> Fecal analycer C_50_ACTOR_ROLE_DESCRIPTION ---> probably still earns as mucg as your typicall wageslave C_47_SYNONYM ---> bottle collector AND coupon collector AND dumpster diver C_37_M_TYPE ---> MEAT C_19_ATTRIBUTES vvvv CON ---> 5 AGI ---> 5 REA ---> 5 STR ---> 5 WIL ---> 5 LOG ---> 5 INT ---> 5 CHA ---> 5 C_20_SKILLBLOCK vvvv SURVIVAL ---> 5 SNEAKING ---> 5 PERCEPTION ---> 5 INTIMIDATION ---> 5 COMPUTER ---> 5 //-------\\\\ FLAGS F_6_ACTOR_ATTRIBUTES F_7_ACTOR_ATTRIBUTES_SPECIALTY //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"Specialty"},{"location":"Syntax/ActorRNGTemplate/","text":"META INDEX --> SUBURBAN_DEFAULT USE --> ACTOR_RNG_TABLE BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ MAIN //-------\\\\ DECLARATION MAIN RACE ---> HUMAN AND DWARF AND ELF SPECIALTY ---> WAGESLAVE AND DRUG_DEALER AND ESOTERIC_CONARTIST ROLE ---> INFOBROKER_1 AND ARSENIST_1 AND HACKER_1 AND BRAWLER_1 CHARACTERISTICS LOOT_TABLE ---> PLACE_HOLDER_ONE TRAIT ---> PLACE_HOLDER_TWO GEAR KITSET ---> PLACE_HOLDER_THREE ITEMS ---> PLACE_HOLDER_FOUR //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"ActorRNGTemplate"},{"location":"Syntax/BaseKitPart/","text":"Pair META INDEX --> C_I_1 USE --> KITPART_BASE BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ MAIN //-------\\\\ COMPONENTS C_6_NAME ---> 4th Wallbreak C_12_ATLAS_INDEX ---> C_I_1 C_0_DESCRIPTION ---> //TODO: add description C_35_KIT_MECHANICAL_SUMMARY ---> deals 10 structure-pointts damage, 20 for thin walls C_48_RARITY ---> 3 C_31_KIT_CAT_TYPE ---> INFUSION C_37_M_TYPE ---> MEAT C_38_KIT_PART_TYPE ---> BASE C_36_KIT_MOD_TIME ---> 3 C_33_COOLDOWN_TIMER ---> 1 C_49_EVENT_REFERENCE ---> C_I_1 //-------\\\\ FLAGS F_5_KITPART_TYPE F_15_KITPART_TYPE_BASE //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END Event META INDEX --> C_I_1 USE --> EVENT BY --> RedRastaRigger(inhouse) DESCRIPTION vvv //---------------------------------------------------------------------------- //---------------------------------------------------------------------------- //----------------------------------------------------------------------------// MAIN //-------\\\\ SELECT SEIZE MEDIUM ---> LINEA SOURCE ---> SELF REACH ---> 2 CONSIDER THIS ---> FLAG --> F_8_IS_WALL PERFORM CACHE ---> SET --> THIS -> FILE //-------\\\\ RUN PERFORM FILE ---> UNIQ --> SPAWN_TILE OF Suburban_0_0 //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"Pair"},{"location":"Syntax/BaseKitPart/#pair","text":"META INDEX --> C_I_1 USE --> KITPART_BASE BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ MAIN //-------\\\\ COMPONENTS C_6_NAME ---> 4th Wallbreak C_12_ATLAS_INDEX ---> C_I_1 C_0_DESCRIPTION ---> //TODO: add description C_35_KIT_MECHANICAL_SUMMARY ---> deals 10 structure-pointts damage, 20 for thin walls C_48_RARITY ---> 3 C_31_KIT_CAT_TYPE ---> INFUSION C_37_M_TYPE ---> MEAT C_38_KIT_PART_TYPE ---> BASE C_36_KIT_MOD_TIME ---> 3 C_33_COOLDOWN_TIMER ---> 1 C_49_EVENT_REFERENCE ---> C_I_1 //-------\\\\ FLAGS F_5_KITPART_TYPE F_15_KITPART_TYPE_BASE //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"Pair"},{"location":"Syntax/BaseKitPart/#event","text":"META INDEX --> C_I_1 USE --> EVENT BY --> RedRastaRigger(inhouse) DESCRIPTION vvv //---------------------------------------------------------------------------- //---------------------------------------------------------------------------- //----------------------------------------------------------------------------// MAIN //-------\\\\ SELECT SEIZE MEDIUM ---> LINEA SOURCE ---> SELF REACH ---> 2 CONSIDER THIS ---> FLAG --> F_8_IS_WALL PERFORM CACHE ---> SET --> THIS -> FILE //-------\\\\ RUN PERFORM FILE ---> UNIQ --> SPAWN_TILE OF Suburban_0_0 //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"Event"},{"location":"Syntax/Condition/","text":"META INDEX --> BURNING USE --> CONDITION BY --> RedRastaRigger(inhouse) DESCRIPTION vvv //----------------------------------------------------------------------------// //----------------------------------------------------------------------------// //----------------------------------------------------------------------------// MAIN //-------\\\\ DATA COMP C_12_ATLAS_INDEX ---> Conditions_0_0 C_6_NAME ---> BURNING //-------\\\\ RUN EFFECT AFFECTING ---> C_57_HITPOINTS --> MOD -> -1 SPREADING ---> PROPERTY EQUALS BURNABLE --> 30 -> 1 //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"Condition"},{"location":"Syntax/ModKitPart/","text":"PAIR META INDEX --> C_S_1__M_1 USE --> KITPART_MOD BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ MAIN //-------\\\\ COMPONENTS C_6_NAME ---> enduring C_12_ATLAS_INDEX ---> C_S_1__M_1 C_0_DESCRIPTION ---> Wheels of justice gind slow but grind fine C_35_KIT_MECHANICAL_SUMMARY ---> your flame burns 10 Rounds but only does 1 damage C_48_RARITY ---> 5 C_37_M_TYPE ---> MAGIC C_31_KIT_CAT_TYPE ---> SPELL C_38_KIT_PART_TYPE ---> MOD C_36_KIT_MOD_TIME ---> 2 C_33_COOLDOWN_TIMER ---> 4 C_49_EVENT_REFERENCE ---> C_S_1 //-------\\\\ FLAGS F_5_KITPART_TYPE F_16_KITPART_TYPE_MOD //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END Event META INDEX --> C_S_1__M_1 USE --> EVENT BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //---------------------------------------------------------------------------- //---------------------------------------------------------------------------- //----------------------------------------------------------------------------// MAIN //-------\\\\ DATA MODIFICATION RUN ---> PERFORM --> COND BURNING LVL 1 AND DURA 8 ADDITION RUN ---> PERFORM --> COND WET LVL 1 AND DURA 8 DELETION RUN ---> PERFORM --> COMP C_57_HITPOINTS DECREMENT BY 1 //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"PAIR"},{"location":"Syntax/ModKitPart/#pair","text":"META INDEX --> C_S_1__M_1 USE --> KITPART_MOD BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ MAIN //-------\\\\ COMPONENTS C_6_NAME ---> enduring C_12_ATLAS_INDEX ---> C_S_1__M_1 C_0_DESCRIPTION ---> Wheels of justice gind slow but grind fine C_35_KIT_MECHANICAL_SUMMARY ---> your flame burns 10 Rounds but only does 1 damage C_48_RARITY ---> 5 C_37_M_TYPE ---> MAGIC C_31_KIT_CAT_TYPE ---> SPELL C_38_KIT_PART_TYPE ---> MOD C_36_KIT_MOD_TIME ---> 2 C_33_COOLDOWN_TIMER ---> 4 C_49_EVENT_REFERENCE ---> C_S_1 //-------\\\\ FLAGS F_5_KITPART_TYPE F_16_KITPART_TYPE_MOD //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"PAIR"},{"location":"Syntax/ModKitPart/#event","text":"META INDEX --> C_S_1__M_1 USE --> EVENT BY --> RedRastaRigger(inhouse) DESCRIPTION vvv } //---------------------------------------------------------------------------- //---------------------------------------------------------------------------- //----------------------------------------------------------------------------// MAIN //-------\\\\ DATA MODIFICATION RUN ---> PERFORM --> COND BURNING LVL 1 AND DURA 8 ADDITION RUN ---> PERFORM --> COND WET LVL 1 AND DURA 8 DELETION RUN ---> PERFORM --> COMP C_57_HITPOINTS DECREMENT BY 1 //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ //------------------------------------------------------------------------------\\\\ REFERENCE END","title":"Event"},{"location":"Syntax/Event/Consider/","text":"Consider COMP Performance will be triggered if the Entity has this Component and the Condition are true. 1. first has to be THIS , then AND or OR 2. COMP 3. Component 4. EQUALLS NOT LESS THAN MORE THAN 5. Value (OPTIONAL) 6. can be multiple values, separated by AND THIS ---> COMP C_1_IS_WALKABLE EQUALLS TRUE AND ---> COMP C_1_IS_WALKABLE NOT TRUE AND ---> COMP C_11_RACE_NAME EQUALLS Orc AND Troll OR ---> COMP C_48_RARITY MORE THAN 2 OR ---> COMP C_48_RARITY LESS THAN 5 COND Performance will be triggered if the Entity Condition is true and the additional values when stated. 1. first has to be THIS , then AND or OR 2. COND 3. IS NOT 4. Condition (OPTIONAL,ONLY ONE) AND LVL DURA LESS THAN MORE THAN Value THIS ---> COND IS BURNING AND ---> COND NOT BURNING OR ---> COND IS WET AND LVL MORE THAN 2 OR ---> COND IS WET AND LVL LESS THAN 2 THIS ---> COND IS WET AND DURA MORE THAN 2 AND ---> COND IS WET AND DURA LESS THAN 2 FLAG Performance will be triggered if the Entity Condition is true. 1. first has to be THIS , then AND or OR 2. FLAG 3. HAS NOT 4. Flag AND ---> FLAG HAS F_CHEAT_1_NO_CLIP THIS ---> FLAG NOT F_8_IS_WALL PROP Performance will be triggered if the Entity Condition is true. 1. first has to be THIS , then AND or OR 2. PROPERTY 3. HAS NOT 4. Property THIS ---> FLAG HAS BURNABLE THIS ---> FLAG NOT CONDUCTING TYPE Performance will be triggered if the Entity Condition is true. 1. first has to be THIS , then AND or OR 2. TYPE 3. IS NOT 4. ACTOR INTERACT TILE THIS ---> TYPE IS ACTOR THIS ---> TYPE NOT INTERACTABLE THIS ---> TYPE NOT TILE","title":"Consider"},{"location":"Syntax/Event/Consider/#consider","text":"","title":"Consider"},{"location":"Syntax/Event/Consider/#comp","text":"Performance will be triggered if the Entity has this Component and the Condition are true. 1. first has to be THIS , then AND or OR 2. COMP 3. Component 4. EQUALLS NOT LESS THAN MORE THAN 5. Value (OPTIONAL) 6. can be multiple values, separated by AND THIS ---> COMP C_1_IS_WALKABLE EQUALLS TRUE AND ---> COMP C_1_IS_WALKABLE NOT TRUE AND ---> COMP C_11_RACE_NAME EQUALLS Orc AND Troll OR ---> COMP C_48_RARITY MORE THAN 2 OR ---> COMP C_48_RARITY LESS THAN 5","title":"COMP"},{"location":"Syntax/Event/Consider/#cond","text":"Performance will be triggered if the Entity Condition is true and the additional values when stated. 1. first has to be THIS , then AND or OR 2. COND 3. IS NOT 4. Condition (OPTIONAL,ONLY ONE) AND LVL DURA LESS THAN MORE THAN Value THIS ---> COND IS BURNING AND ---> COND NOT BURNING OR ---> COND IS WET AND LVL MORE THAN 2 OR ---> COND IS WET AND LVL LESS THAN 2 THIS ---> COND IS WET AND DURA MORE THAN 2 AND ---> COND IS WET AND DURA LESS THAN 2","title":"COND"},{"location":"Syntax/Event/Consider/#flag","text":"Performance will be triggered if the Entity Condition is true. 1. first has to be THIS , then AND or OR 2. FLAG 3. HAS NOT 4. Flag AND ---> FLAG HAS F_CHEAT_1_NO_CLIP THIS ---> FLAG NOT F_8_IS_WALL","title":"FLAG"},{"location":"Syntax/Event/Consider/#prop","text":"Performance will be triggered if the Entity Condition is true. 1. first has to be THIS , then AND or OR 2. PROPERTY 3. HAS NOT 4. Property THIS ---> FLAG HAS BURNABLE THIS ---> FLAG NOT CONDUCTING","title":"PROP"},{"location":"Syntax/Event/Consider/#type","text":"Performance will be triggered if the Entity Condition is true. 1. first has to be THIS , then AND or OR 2. TYPE 3. IS NOT 4. ACTOR INTERACT TILE THIS ---> TYPE IS ACTOR THIS ---> TYPE NOT INTERACTABLE THIS ---> TYPE NOT TILE","title":"TYPE"},{"location":"Syntax/Event/Perform/","text":"Perform COMP FILE COMP Component SET INCREMENT BYT DECREMENT BY Value FILE ---> COMP C_1_IS_WALKABLE SET TRUE FILE ---> COMP C_1_IS_WALKABLE SET FALSE FILE ---> COMP C_48_RARITY INCREMENT BY 2 FILE ---> COMP C_48_RARITY DECREMENT BY 5 FILE ---> COMP C_48_RARITY DECREMENT SET 1 COND FILE COND Condition LVL DURA Value LVL DURA Value FILE ---> COND BURNING LVL 3 AND DURA 5 FILE ---> COND BURNING DURA 3 AND LVL 5 FLAG FILE FLAG SWAP ADD REMOVE Flag FILE ---> FLAG SWAP F_CHEAT_1_NO_CLIP FILE ---> FLAG REMOVE F_8_IS_WALL FILE ---> FLAG ADD F_8_IS_WALL PROP FILE PROP SWAP ADD REMOVE Property FILE ---> FLAG SWAP BURNABLE FILE ---> FLAG REMOVE CONDUCTING FILE ---> FLAG ADD BURNABLE UNIQ FILE UNIQ UniqueStatmod (CONTEXTUAL) FILE ---> UNIQ DEAL_PLAIN_DAMAGE OF 20 FILE ---> UNIQ SPAWN_TILE_AROUND Terrain_0_0 3 FILE ---> UNIQ MOVE_SELECT END OF REACH","title":"Perform"},{"location":"Syntax/Event/Perform/#perform","text":"","title":"Perform"},{"location":"Syntax/Event/Perform/#comp","text":"FILE COMP Component SET INCREMENT BYT DECREMENT BY Value FILE ---> COMP C_1_IS_WALKABLE SET TRUE FILE ---> COMP C_1_IS_WALKABLE SET FALSE FILE ---> COMP C_48_RARITY INCREMENT BY 2 FILE ---> COMP C_48_RARITY DECREMENT BY 5 FILE ---> COMP C_48_RARITY DECREMENT SET 1","title":"COMP"},{"location":"Syntax/Event/Perform/#cond","text":"FILE COND Condition LVL DURA Value LVL DURA Value FILE ---> COND BURNING LVL 3 AND DURA 5 FILE ---> COND BURNING DURA 3 AND LVL 5","title":"COND"},{"location":"Syntax/Event/Perform/#flag","text":"FILE FLAG SWAP ADD REMOVE Flag FILE ---> FLAG SWAP F_CHEAT_1_NO_CLIP FILE ---> FLAG REMOVE F_8_IS_WALL FILE ---> FLAG ADD F_8_IS_WALL","title":"FLAG"},{"location":"Syntax/Event/Perform/#prop","text":"FILE PROP SWAP ADD REMOVE Property FILE ---> FLAG SWAP BURNABLE FILE ---> FLAG REMOVE CONDUCTING FILE ---> FLAG ADD BURNABLE","title":"PROP"},{"location":"Syntax/Event/Perform/#uniq","text":"FILE UNIQ UniqueStatmod (CONTEXTUAL) FILE ---> UNIQ DEAL_PLAIN_DAMAGE OF 20 FILE ---> UNIQ SPAWN_TILE_AROUND Terrain_0_0 3 FILE ---> UNIQ MOVE_SELECT END OF REACH","title":"UNIQ"},{"location":"Syntax/Event/Seize/","text":"Seize MEDIUM MEDIUM ---> AREA MEDIUM ---> LINEA MEDIUM ---> SELECT MEDIUM ---> SELF MEDIUM ---> AREA SOURCE SOURCE ---> SELF REACH REACH ---> 1 REACH ---> 10 REACH ---> 30","title":"Seize"},{"location":"Syntax/Event/Seize/#seize","text":"","title":"Seize"},{"location":"Syntax/Event/Seize/#medium","text":"MEDIUM ---> AREA MEDIUM ---> LINEA MEDIUM ---> SELECT MEDIUM ---> SELF MEDIUM ---> AREA","title":"MEDIUM"},{"location":"Syntax/Event/Seize/#source","text":"SOURCE ---> SELF","title":"SOURCE"},{"location":"Syntax/Event/Seize/#reach","text":"REACH ---> 1 REACH ---> 10 REACH ---> 30","title":"REACH"}]}